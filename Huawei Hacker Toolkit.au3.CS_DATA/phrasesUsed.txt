Run(@ComSpec&" /c "&$ECBB0C9C7BAA951B&" 2>&1",@ScriptDir,@SW_HIDE,$ECBB0C9C6B3A951B+$ECBB0C9C6BEA951B)
1       
StdoutRead($ECBB0C9C6B1A951B)
@error 
StringStripCR(StringTrimRight($ECBB0C9D6BAA951B,StringLen(@CRLF)))
_ECBB5C986BAA951B('command -v '&$ECBB0C9C7BAA951B&' > /dev/null 2>&1 && echo \"Found\" || echo \"Not Found\"')
_ECBB8C9C6B6A951B()
Not $ECBB0C9C6B6A951B 
_ECBB0C9C65A8951B("adb kill-server")
_ECBB0C9C65A8951B("adb start-server")
_ECBB8C9C6B6A951B()
SetError(Int( Not $ECBB0C9C6B6A951B), 0 ,Int($ECBB0C9C6B6A951B))
_ECBB5C986BAA951B('if [ -e \"'&$ECBB0CCC6BAA951B&'\" ]; then echo \"Found\"; else echo \"Not Found\"; fi')
_ECBB0C9C65A8951B("fastboot flash "&$ECBB0C9C6B7A951B&' "'&$ECBB0CCC6BAA951B&'"')
StringRegExp(_ECBB5C986BAA951B("dumpsys iphonesubinfo"),"Device ID = (.*)", 3 )
Not @error 
_ECBB5C986BAA951B("getprop "&$ECBB0C9C1BAA951B)
_ECBB8C9C6B6A951B() 
_ECBBEC9C6B8A951B()
_ECBB1C9C6BDA951B()
_ECBB08996BAA951B("busybox")
_ECBB5C986BAA951B("echo Root Checker", True )
_ECBB0C9C65A8951B("fastboot devices")
_ECBB0C9C65A8951B("adb get-state")
_ECBB0C9C65A8951B("adb get-state")
_ECBB0C9C65A8951B('adb pull "'&$ECBB0CAC6B9A951B&'" "'&$ECBB0C976BA2951B&'"')
_ECBB0C9C65A8951B('adb push "'&$ECBB0C976BA2951B&'" "'&$ECBB0CAC6B9A951B&'"')
$ECBB0C9C6B7A951B= Default 
Not _ECBB8C9C6B6A951B() 
SetError( 1 , 0 , 0 )
_ECBB0C9C65A8951B("adb reboot recovery")
_ECBB1C9C6BDA951B() 
_ECBB0C9C65A8951B("fastboot reboot-bootloader")
_ECBB0C9C65A8951B("adb reboot bootloader")
Not _ECBB8C9C6B6A951B() 
SetError( 1 , 0 , 0 )
_ECBB0CD16BAA951B("ro.product.manufacturer")<>"Samsung" 
SetError( 2 , 0 , 0 )
_ECBB0C9C65A8951B("adb reboot download")
_ECBB1C9C6BDA951B() 
_ECBB0C9C65A8951B("fastboot reboot")
_ECBB0C9C65A8951B("adb reboot")
$ECBB0C946BDA951B= Default 
$ECB60C9CCBAA951B= Default 
$ECBB0C946BDA951B 
$ECB60C9CCBAA951B 
Not _ECBB0C9C603A951B() 
_ECBB5C986BAA951B("/data/local/tmp/busybox echo BusyBox Checker")<>"BusyBox Checker" 
_ECBB5C986BAA951B("mkdir /data/local/tmp")
_ECBB0C9C6A5A951B("busybox","/data/local/tmp")
_ECBB5C986BAA951B("chmod 755 /data/local/tmp/busybox")
_ECBB5C986BAA951B("export PATH=/data/local/tmp:$ECBB8C9C6B4A951B; busybox "&$ECBB0C9C7BAA951B, True )
_ECBB5C986BAA951B("busybox "&$ECBB0C9C7BAA951B, True )
_ECBB0C9C65A8951B('adb shell su -c "'&$ECBB0C9C7BAA951B&'"')
$ECB60C9CCBAA951B 
Not _ECBB0C9C603A951B() 
_ECBB5C986BAA951B("/data/local/tmp/busybox echo BusyBox Checker")<>"BusyBox Checker" 
_ECBB5C986BAA951B("mkdir /data/local/tmp")
_ECBB0C9C6A5A951B("busybox","/data/local/tmp")
_ECBB5C986BAA951B("chmod 755 /data/local/tmp/busybox")
_ECBB5C986BAA951B("export PATH=/data/local/tmp:$ECBB8C9C6B4A951B; busybox "&$ECBB0C9C7BAA951B)
_ECBB5C986BAA951B("busybox "&$ECBB0C9C7BAA951B)
_ECBB0C9C65A8951B('adb shell "'&$ECBB0C9C7BAA951B&'"')
$ECB60C9C6EAA951B<=$ECBB0D916BAA951B 
($ECB60C9C6EAA951B-$ECBB0D916BAA951B)< 15 
IsNumber($ECBB0C9C2BCA951B) 
($ECBB0C9C2BCA951B>=$ECBB0C9C6BC5951B And IsNumber($ECBB0C9C6BC5951B)) Or ( Not IsNumber($ECBB0C9C6BC5951B) And StringCompare($ECBB0C9C2BCA951B,$ECBB0C9C6BC5951B)>= 0 ) 
(StringCompare($ECBB0C9C2BCA951B,$ECBB02916BAA951B[$ECBB0C2C6BA4951B])>= 0 ) 
Int(($ECBB0D916BAA951B+$ECB60C9C6EAA951B)/ 2 )
$ECBB3C9C9BAA951B 
($ECBB02916BAA951B[$ECB00C9F6BAA951B]<$ECBBAC9C60AA951B And IsNumber($ECBB02916BAA951B[$ECB00C9F6BAA951B])) Or ( Not IsNumber($ECBB02916BAA951B[$ECB00C9F6BAA951B]) And StringCompare($ECBB02916BAA951B[$ECB00C9F6BAA951B],$ECBBAC9C60AA951B)< 0 )       
($ECBB02916BAA951B[$ECBE0C946BAA951B]>$ECBBAC9C60AA951B And IsNumber($ECBB02916BAA951B[$ECBE0C946BAA951B])) Or ( Not IsNumber($ECBB02916BAA951B[$ECBE0C946BAA951B]) And StringCompare($ECBB02916BAA951B[$ECBE0C946BAA951B],$ECBBAC9C60AA951B)> 0 )       
(StringCompare($ECBB02916BAA951B[$ECB00C9F6BAA951B],$ECBBAC9C60AA951B)< 0 )       
(StringCompare($ECBB02916BAA951B[$ECBE0C946BAA951B],$ECBBAC9C60AA951B)> 0 )       
$ECB00C9F6BAA951B<=$ECBE0C946BAA951B 
$ECB00C9F6BAA951B>$ECBE0C946BAA951B       
_ECBB0CDC0BAA951B($ECBB02916BAA951B,$ECBB0D916BAA951B,$ECBE0C946BAA951B)
_ECBB0CDC0BAA951B($ECBB02916BAA951B,$ECB00C9F6BAA951B,$ECB60C9C6EAA951B)
$ECB60C9C6EAA951B<=$ECBB0D916BAA951B 
Int(($ECBB0D916BAA951B+$ECB60C9C6EAA951B)/ 2 )
$ECBB3C9C9BAA951B 
($ECBB0CDC4BAA951B*($ECBB02916BAA951B[$ECB00C9F6BAA951B][$ECB90C9CFBAA951B]-$ECBBAC9C60AA951B)< 0 And IsNumber($ECBB02916BAA951B[$ECB00C9F6BAA951B][$ECB90C9CFBAA951B])) Or ( Not IsNumber($ECBB02916BAA951B[$ECB00C9F6BAA951B][$ECB90C9CFBAA951B]) And $ECBB0CDC4BAA951B*StringCompare($ECBB02916BAA951B[$ECB00C9F6BAA951B][$ECB90C9CFBAA951B],$ECBBAC9C60AA951B)< 0 )       
($ECBB0CDC4BAA951B*($ECBB02916BAA951B[$ECBE0C946BAA951B][$ECB90C9CFBAA951B]-$ECBBAC9C60AA951B)> 0 And IsNumber($ECBB02916BAA951B[$ECBE0C946BAA951B][$ECB90C9CFBAA951B])) Or ( Not IsNumber($ECBB02916BAA951B[$ECBE0C946BAA951B][$ECB90C9CFBAA951B]) And $ECBB0CDC4BAA951B*StringCompare($ECBB02916BAA951B[$ECBE0C946BAA951B][$ECB90C9CFBAA951B],$ECBBAC9C60AA951B)> 0 )       
($ECBB0CDC4BAA951B*StringCompare($ECBB02916BAA951B[$ECB00C9F6BAA951B][$ECB90C9CFBAA951B],$ECBBAC9C60AA951B)< 0 )       
($ECBB0CDC4BAA951B*StringCompare($ECBB02916BAA951B[$ECBE0C946BAA951B][$ECB90C9CFBAA951B],$ECBBAC9C60AA951B)> 0 )       
$ECB00C9F6BAA951B<=$ECBE0C946BAA951B 
$ECB00C9F6BAA951B>$ECBE0C946BAA951B       
_ECB30C916BAA951B($ECBB02916BAA951B,$ECBB0CDC4BAA951B,$ECBB0D916BAA951B,$ECBE0C946BAA951B,$ECB90C9CFBAA951B,$ECBB3C9C6BAA951B)
_ECB30C916BAA951B($ECBB02916BAA951B,$ECBB0CDC4BAA951B,$ECB00C9F6BAA951B,$ECB60C9C6EAA951B,$ECB90C9CFBAA951B,$ECBB3C9C6BAA951B)
$ECBB0C9C6F8A951B>$ECBB0C9C6BAC951B 
$ECB20C9C6BAA951B< 45 
$ECBB1C926BAA951B 
$ECBB0C9C6B4A951B<$ECBB0C9C6BAC951B       
$ECBBECAC6BAA951B<$ECBB02916BAA951B[$ECBB0C2C6BA4951B]       
$ECBB0C2C6BA4951B+ 1 =$ECBB0C9C6F8A951B 
1       
$ECBB0C9C6F8A951B>=$ECBB0C9C6BAC951B 
$ECBB02916BAA951B[$ECBB0C9C6F8A951B]<$ECBB02916BAA951B[$ECBB0C9C6F8A951B- 1] 
1       
$ECBB0C9C6F8A951B>$ECBB0C9C6BAC951B 
$ECBBFC986BAA951B<$ECBB0C2CABAA951B 
$ECBBFC986BAA951B<$ECBB02916BAA951B[$ECBB0C936BEA951B]       
$ECBB0C2CABAA951B<$ECBB02916BAA951B[$ECBB0C936BEA951B]       
$ECBB0C356BAA951B<$ECBB02916BAA951B[$ECBB0C9C6BAC951B]       
BitShift($ECB20C9C6BAA951B, 3 )
Ceiling(($ECBB0C9C6F8A951B+$ECBB0C9C6BAC951B)/ 2 )
$ECBB02916BAA951B[$ECBB0C9C7BA8951B]<$ECBB02916BAA951B[$ECB20C9C6BAB951B] 
$ECBB02916BAA951B[$ECBB087C6BAA951B]<$ECBB02916BAA951B[$ECBB0C9C7BA8951B] 
$ECBB0B9C6BA5951B<$ECBB02916BAA951B[$ECB20C9C6BAB951B] 
$ECBB02916BAA951B[$ECB40C9C9BAA951B]<$ECBB02916BAA951B[$ECBB087C6BAA951B] 
$ECBB0B9C6BA5951B<$ECBB02916BAA951B[$ECBB0C9C7BA8951B] 
$ECBB0B9C6BA5951B<$ECBB02916BAA951B[$ECB20C9C6BAB951B] 
$ECBB02916BAA951B[$ECBB3C9C6BAF951B]<$ECBB02916BAA951B[$ECB40C9C9BAA951B] 
$ECBB0B9C6BA5951B<$ECBB02916BAA951B[$ECBB087C6BAA951B] 
$ECBB0B9C6BA5951B<$ECBB02916BAA951B[$ECBB0C9C7BA8951B] 
$ECBB0B9C6BA5951B<$ECBB02916BAA951B[$ECB20C9C6BAB951B] 
(($ECBB02916BAA951B[$ECB20C9C6BAB951B]<>$ECBB02916BAA951B[$ECBB0C9C7BA8951B]) And ($ECBB02916BAA951B[$ECBB0C9C7BA8951B]<>$ECBB02916BAA951B[$ECBB087C6BAA951B]) And ($ECBB02916BAA951B[$ECBB087C6BAA951B]<>$ECBB02916BAA951B[$ECB40C9C9BAA951B]) And ($ECBB02916BAA951B[$ECB40C9C9BAA951B]<>$ECBB02916BAA951B[$ECBB3C9C6BAF951B])) 
$ECBB02916BAA951B[$ECBB0C9CCB9A951B]>=$ECBB0C994BAA951B       
$ECBB02916BAA951B[$ECBB0C6C6B0A951B]<=$ECBB0C916B8A951B       
$ECBB0C936BEA951B<=$ECBB0C6C6B0A951B       
$ECBB3E9C6BAA951B<$ECBB0C994BAA951B 
$ECBB02916BAA951B[$ECBB0C6C6B0A951B]>$ECBB0C916B8A951B       
$ECBB0C6C6B0A951B+ 1 =$ECBB0C936BEA951B 
$ECBB02916BAA951B[$ECBB0C6C6B0A951B]<$ECBB0C994BAA951B 
_ECB90C8C6BAA951B($ECBB02916BAA951B,$ECBB0C9C6F8A951B,$ECBB0C9CCB9A951B- 2 , True )
_ECB90C8C6BAA951B($ECBB02916BAA951B,$ECBB0C6C6B0A951B+ 2 ,$ECBB0C9C6BAC951B, False )
($ECBB0C9CCB9A951B<$ECB20C9C6BAB951B) And ($ECBB3C9C6BAF951B<$ECBB0C6C6B0A951B) 
$ECBB02916BAA951B[$ECBB0C9CCB9A951B]=$ECBB0C994BAA951B       
$ECBB02916BAA951B[$ECBB0C6C6B0A951B]=$ECBB0C916B8A951B       
$ECBB0C936BEA951B<=$ECBB0C6C6B0A951B       
$ECBB3E9C6BAA951B=$ECBB0C994BAA951B 
$ECBB02916BAA951B[$ECBB0C6C6B0A951B]=$ECBB0C916B8A951B       
$ECBB0C6C6B0A951B+ 1 =$ECBB0C936BEA951B 
$ECBB02916BAA951B[$ECBB0C6C6B0A951B]=$ECBB0C994BAA951B 
_ECB90C8C6BAA951B($ECBB02916BAA951B,$ECBB0C9CCB9A951B,$ECBB0C6C6B0A951B, False )
$ECBB0C936BEA951B<=$ECBB0C6C6B0A951B       
$ECBB02916BAA951B[$ECBB0C936BEA951B]=$ECBB0C9C6BAE951B 
$ECBB3E9C6BAA951B<$ECBB0C9C6BAE951B 
$ECBB02916BAA951B[$ECBB0C6C6B0A951B]>$ECBB0C9C6BAE951B       
$ECBB02916BAA951B[$ECBB0C6C6B0A951B]<$ECBB0C9C6BAE951B 
_ECB90C8C6BAA951B($ECBB02916BAA951B,$ECBB0C9C6F8A951B,$ECBB0C9CCB9A951B- 1 , True )
_ECB90C8C6BAA951B($ECBB02916BAA951B,$ECBB0C6C6B0A951B+ 1 ,$ECBB0C9C6BAC951B, False )
$ECB50C9C6BA8951B= Default 
$ECBB0F9C68AA951B= Default 
@CRLF
$ECBB0C9C1CAA951B= Default 
$ECBB079C6BAD951B= Default 
$ECBB6C9D6BAA951B= Default 
$ECBB4C9CEBAA951B= Default 
Not IsArray($ECBB02916BAA951B) 
SetError( 1 , 0 ,- 1 )
UBound($ECBB02916BAA951B,$ECBB0C9BCBAA951B)
$ECBB0C9C1CAA951B=-1 
$ECBB079C6BAD951B=-1 
$ECBB0C9C1CAA951B<- 1 Or $ECBB079C6BAD951B<- 1 
SetError( 3 , 0 ,- 1 )
$ECBB0C9C1CAA951B>$ECBA0C9C7BAA951B Or $ECBB079C6BAD951B>$ECBA0C9C7BAA951B 
SetError( 3 , 0 ,"")
$ECBB0C9C1CAA951B>$ECBB079C6BAD951B 
SetError( 4 , 0 ,- 1 )
UBound($ECBB02916BAA951B,$ECBB0C9C60BA951B)
StringTrimRight($ECBB0C856BAA951B,StringLen($ECB50C9C6BA8951B))
UBound($ECBB02916BAA951B,$ECBB0CDA6BAA951B)
$ECBB6C9D6BAA951B=-1 
$ECBB4C9CEBAA951B=-1 
$ECBB6C9D6BAA951B<- 1 Or $ECBB4C9CEBAA951B<- 1 
SetError( 5 , 0 ,- 1 )
$ECBB6C9D6BAA951B>$ECBB0C9C6BB3951B Or $ECBB4C9CEBAA951B>$ECBB0C9C6BB3951B 
SetError( 5 , 0 ,- 1 )
$ECBB6C9D6BAA951B>$ECBB4C9CEBAA951B 
SetError( 6 , 0 ,- 1 )
StringTrimRight($ECBB0C856BAA951B,StringLen($ECB50C9C6BA8951B))
StringTrimRight($ECBB0C856BAA951B,StringLen($ECBB0F9C68AA951B))
SetError( 2 , 0 ,- 1 )
$ECBB0D916BAA951B==$ECBB0CAD6BAA951B- 1 
$ECBD059C6BAA951B<>"" 
StringTrimRight($ECBB0C9C6B62951B[$ECBB0CEC6B9A951B],StringLen($ECBD059C6BAA951B))
_ECBB029C6B3A951B($ECBB02916BAA951B,$ECBB0D916BAA951B+ 1 ,$ECBB0CAD6BAA951B,$ECBD059C6BAA951B,$ECBB0C9C6A9A951B,$ECBB0C9C6B62951B,$ECBB0CEC6B9A951B)
Not $ECBBCC9C8BAA951B Or $ECBBCC9C8BAA951B="." 
StringReplace($ECBBCC9C8BAA951B,"/","\")
StringLeft($ECBB0F9C63AA951B, 1 )
StringMid($ECBB0F9C63AA951B, 2 , 1 )
$ECBC0C3C6BAA951B= Default 
@WorkingDir
StringLeft($ECBB0F9C63AA951B, 2 )
$ECBB019C0BAA951B="\\" 
StringTrimLeft($ECBB0F9C63AA951B, 2 )
StringInStr($ECBB0F9C63AA951B,"\")
StringLeft($ECBB0F9C63AA951B,$ECB60E9C6BAA951B)
StringTrimLeft($ECBB0F9C63AA951B,$ECB60E9C6BAA951B)
StringRight($ECBB019C0BAA951B, 1 )
StringTrimLeft($ECBB0F9C63AA951B, 2 )
StringLeft($ECBB0F9C63AA951B, 1 )<>"\" 
StringLeft($ECBB5C7C6BAA951B, 2 )=StringLeft($ECBC0C3C6BAA951B, 2 ) 
StringSplit($ECBB0F9C63AA951B,"\")
$ECBB0C964BAA951B[$ECBB0C9C6B4A951B]=".." 
$ECBB0C2C6BA4951B 
Not $ECBB0C9C1B1A951B 
StringInStr($ECBB0F9C63AA951B,"..") 
_ECBB0C975BAA951B($ECBB0F9C63AA951B)
StringReplace($ECBB0F9C63AA951B,".\","\")
@extended= 0       
StringRegExp($ECBB0CCC6BAA951B,"^\h*((?:\\\\\?\\)*(\\\\[^\?\/\\]+|[A-Za-z]:)?(.*[\/\\]\h*)?((?:[^\.\/\\]|(?(?=\.[^\/\\]*\.)\.))*)?([^\/\\]*))$",$ECBB3C9C6BBA951B)
@error 
StringLeft($ECBB02916BAA951B[ 2 ], 1 )=="/" 
StringRegExpReplace($ECBB02916BAA951B[ 2 ],"\h*[\/\\]+\h*","\/")
StringRegExpReplace($ECBB02916BAA951B[ 2 ],"\h*[\/\\]+\h*","\\")
Ptr (-1)
DllCall("user32.dll","bool","ClientToScreen","hwnd",$ECBB0C9C5BAA951B,"struct*",$ECBA0C9C6BAA951B)
@error Or Not $ECBB0D9CEBAA951B[ 0 ] 
SetError(@error+ 10 ,@extended, 0 )
DllCall("kernel32.dll","bool","CloseHandle","handle",$ECBB0C9A6BA5951B)
@error 
SetError(@error,@extended, False )
BitAND($ECBB0C9C629A951B, 1 )<> 0 
BitOR($ECBB0C0C5BAA951B,$ECBE5C9C6BAA951B)
BitAND($ECBB0C9C629A951B, 2 )<> 0 
BitOR($ECBB0C0C5BAA951B,$ECBB0C936BA8951B)
BitAND($ECBB0C9C629A951B, 4 )<> 0 
BitOR($ECBB0C0C5BAA951B,$ECBB0CDC6BA1951B)
BitAND($ECBB0F9C6AAA951B, 1 )<> 0 
BitOR($ECBB1C936BAA951B,$ECB60C9C64AA951B)
BitAND($ECBB0F9C6AAA951B, 2 )<> 0 
BitOR($ECBB1C936BAA951B,$ECBB049C6B1A951B)
BitAND($ECBB0F9C6AAA951B, 4 )<> 0 
BitOR($ECBB1C936BAA951B,$ECBB2C9C6DAA951B)
BitAND($ECBB0C9D7BAA951B, 1 )<> 0 
BitOR($ECBB0C9F64AA951B,$ECB30C9C5BAA951B)
BitAND($ECBB0C9D7BAA951B, 2 )<> 0 
BitOR($ECBB0C9F64AA951B,$ECBB0C9C68A4951B)
BitAND($ECBB0C9D7BAA951B, 4 )<> 0 
BitOR($ECBB0C9F64AA951B,$ECBB0C3C6EAA951B)
BitAND($ECBB0C9D7BAA951B, 8 )<> 0 
BitOR($ECBB0C9F64AA951B,$ECBB0C5C6BA8951B)
DllCall("kernel32.dll","handle","CreateFileW","wstr",$ECBB0C9C60A2951B,"dword",$ECBB0C0C5BAA951B,"dword",$ECBB1C936BAA951B,"struct*",$ECBB079C4BAA951B,"dword",$ECBB0CCC62AA951B,"dword",$ECBB0C9F64AA951B,"ptr", 0 )
@error Or ($ECBB0C9C6B62951B[ 0 ]=$ECBB09946BAA951B) 
SetError(@error,@extended, 0 )
$ECBC0D9C6BAA951B="" 
_ECBB0CFC6CAA951B($ECBB0C9C5BAA951B)
$ECBB0CEC6B9A951B>=$ECBB6D9C6BAA951B[0][1] 
_ECBB0CA96BAA951B($ECBB0C9C5BAA951B,$ECBB1C9C6B9A951B)
$ECBB0C9C5BAA951B<> 0       
( Not $ECB70C9C6BA1951B) Or _ECBB0C916B1A951B($ECBB0C9C5BAA951B) 
_ECBBD49C6BAA951B($ECBB0C9C5BAA951B)
_ECBB1C9CDBAA951B($ECBB0C9C5BAA951B,$ECB70C9C6BA1951B)
_ECBB0CA96BAA951B($ECBB0C9C5BAA951B,$ECBB5C3C6BAA951B)
Not IsHWnd($ECBB0C9C5BAA951B) 
GUICtrlGetHandle($ECBB0C9C5BAA951B)
DllCall("user32.dll","int","GetClassNameW","hwnd",$ECBB0C9C5BAA951B,"wstr","","int", 4096 )
@error Or Not $ECBB0C9C6B62951B[ 0 ] 
SetError(@error,@extended,'')
SetExtended($ECBB0C9C6B62951B[ 0 ],$ECBB0C9C6B62951B[ 2 ])
DllStructCreate($ECBB1C9C6BCA951B)
DllCall("user32.dll","bool","GetClientRect","hwnd",$ECBB0C9C5BAA951B,"struct*",$ECB90C9C6BA0951B)
@error Or Not $ECBB0D9CEBAA951B[ 0 ] 
SetError(@error+ 10 ,@extended, 0 )
DllCall("kernel32.dll","bool","GetFileSizeEx","handle",$ECBB0D9C6BAE951B,"int64*", 0 )
@error Or Not $ECBB0C9C6B62951B[ 0 ] 
SetError(@error,@extended,- 1 )
DllCall("user32.dll","hwnd","GetWindow","hwnd",$ECBB0C9C5BAA951B,"uint",$ECB30C9C4BAA951B)
@error 
SetError(@error,@extended, 0 )
BitShift($ECBB8C9C6BAA951B, 16 )
DllCall("user32.dll","bool","IsWindowVisible","hwnd",$ECBB0C9C5BAA951B)
@error 
SetError(@error,@extended, 0 )
BitAND($ECBB8C9C6BAA951B, 0xFFFF )
DllCall("kernel32.dll","bool","ReadFile","handle",$ECBB0D9C6BAE951B,"struct*",$ECBD0C9C6BAE951B,"dword",$ECBB8C9C6BA9951B,"dword*", 0 ,"struct*",$ECBB9C976BAA951B)
@error 
SetError(@error,@extended, False )
DllCall("kernel32.dll","INT","SetFilePointer","handle",$ECBB0D9C6BAE951B,"long",$ECBA0B9C6BAA951B,"ptr", 0 ,"long",$ECBA0CFC6BAA951B)
@error 
SetError(@error,@extended,- 1 )
DllCall("kernel32.dll","bool","WriteFile","handle",$ECBB0D9C6BAE951B,"struct*",$ECBD0C9C6BAE951B,"dword",$ECBB0B9C6BA0951B,"dword*", 0 ,"struct*",$ECBB9C976BAA951B)
@error 
SetError(@error,@extended, False )
GUICtrlCreateIcon("","", 0 , 0 )
_ECBB0C9CCBA0951B($ECB7BC9C6BAA951B,$ECBB0C9C60A2951B,$ECBB0ACC6BAA951B,$ECBB0C9C6B2E951B,$ECBB0C2C6BA3951B)
@error 
GUICtrlDelete($ECB7BC9C6BAA951B)
SetError( 1 , 0 , 0 )
UBound($ECB20C2C6BAA951B)> 1 
_ECBB089C6BCA951B($ECB7BC9C6BAA951B,$ECB20C2C6BAA951B,$ECBB0C2C6BA3951B,$ECBBDC9C69AA951B)
@error 
UBound($ECB20C2C6BAA951B)
DllCall("user32.dll","int","DestroyIcon","hwnd",$ECB20C2C6BAA951B[$ECBB0C9C6B4A951B][ 0 ])
SetError( 2 , 0 , 0 )
SetError( 0 , 0 ,$ECB7BC9C6BAA951B)
_ECBF0B9C6BAA951B($ECB20C2C6BAA951B,$ECBB0C9C6DFA951B, 1 )
GUICtrlDelete($ECB7BC9C6BAA951B)
$ECBB0C9C6DFA951B 
DllCall("kernel32.dll","ptr","TerminateThread","ptr",$ECBB0C9C6DFA951B,"dword", 0 )
IsArray($ECB20C2C6BAA951B) 
$ECBB0C8C6B2A951B 
UBound($ECB20C2C6BAA951B)
DllCall("user32.dll","int","DestroyIcon","hwnd",$ECB20C2C6BAA951B[$ECBB0C9C6B4A951B][ 0 ])
UBound($ECB20C2C6BAA951B)
DllCall("user32.dll","int","DestroyIcon","hwnd",$ECB20C2C6BAA951B[$ECBB0C9C6B4A951B][ 0 ])
$ECBB0C9C6DFA951B 
Not $ECBB7C9CEBAA951B And IsArray($ECB20C2C6BAA951B) 
GUICtrlGetHandle($ECBB0C9D9BAA951B)
DllCall("user32.dll","hwnd","GetDC","hwnd",$ECB10C9C6BA1951B)
@error 
DllStructGetData($ECBB04EC6BAA951B, 1 )
$ECB60CDC6BAA951B>UBound($ECB20C2C6BAA951B)- 1 
DllCall("User32.dll","int","DrawIconEx","hwnd",$ECBB4C9C7BAA951B,"int", 0 ,"int", 0 ,"hwnd",$ECBB0C6C67AA951B,"int", 0 ,"int", 0 ,"dword", 0 ,"hwnd", 0 ,"dword", 3 )
DllCall("user32.dll","int","ReleaseDC","hwnd",$ECB10C9C6BA1951B,"hwnd",$ECBB4C9C7BAA951B)
DllCall("kernel32.dll","ptr","GetModuleHandleW","wstr","kernel32.dll")
@error Or Not $ECB50C9C63AA951B[0] 
SetError( 1 , 0 ,"")
DllCall("kernel32.dll","ptr","GetProcAddress","ptr",$ECBB0C9C5BA5951B,"str","Sleep")
@error Or Not $ECB00C9C6BAB951B[0] 
SetError( 2 , 0 ,"")
UBound($ECBB0C9E6BA5951B)
DllStructCreate("dword")
DllStructGetPtr($ECBBDC9C69AA951B)
$ECBB0C94EBAA951B 
DllCall("kernel32.dll","ptr","GetModuleHandleW","wstr","user32.dll")
@error Or Not $ECB50C9C63AA951B[0] 
SetError( 3 , 0 ,"")
DllCall("kernel32.dll","ptr","GetProcAddress","ptr",$ECBB0C9C5BA5951B,"str","SendMessageW")
@error Or Not $ECBE0C9CBBAA951B[0] 
SetError( 4 , 0 ,"")
DllStructCreate($ECB70C9C6DAA951B)
DllCall("kernel32.dll","ptr","VirtualAlloc","ptr", 0 ,"dword",DllStructGetSize($ECBB06CC6BAA951B),"dword", 4096 ,"dword", 64 )
DllStructSetData($ECBB06CC6BAA951B,$ECBB0C9C6B4A951B,"0x"&"68"&_ECBB0C956B6A951B( 0 )&"68"&_ECBB0C956B6A951B($ECBB0C9E6BA5951B[$ECBB0C9C6B4A951B- 1 ][ 0 ])&"68"&_ECBB0C956B6A951B( 368 )&"68"&_ECBB0C956B6A951B(GUICtrlGetHandle($ECBB0C9D9BAA951B))&"B8"&_ECBB0C956B6A951B($ECBBAC956BAA951B)&"FFD0"&"68"&_ECBB0C956B6A951B($ECBB0C9E6BA5951B[$ECBB0C9C6B4A951B- 1 ][ 1 ])&"B8"&_ECBB0C956B6A951B($ECBB0C936BA9951B)&"FFD0")
DllStructSetData($ECBB06CC6BAA951B,$ECBB0C9C5B2A951B+ 1 ,"0x"&"E9"&_ECBB0C956B6A951B(-($ECBB0C9C5B2A951B* 39 + 5 ))&"C3")
DllCall("kernel32.dll","ptr","GetModuleHandleW","wstr","user32.dll")
@error Or Not $ECB50C9C63AA951B[0] 
SetError( 3 , 0 ,"")
DllCall("kernel32.dll","ptr","GetProcAddress","ptr",$ECBB0C9C5BA5951B,"str","DrawIconEx")
@error Or Not $ECBD0C9C6B1A951B[0] 
SetError( 5 , 0 ,"")
DllStructCreate($ECB70C9C6DAA951B)
DllCall("kernel32.dll","ptr","VirtualAlloc","ptr", 0 ,"dword",DllStructGetSize($ECBB06CC6BAA951B),"dword", 4096 ,"dword", 64 )
DllCall("user32.dll","hwnd","GetDC","hwnd",GUICtrlGetHandle($ECBB0C9D9BAA951B))
@error Or Not $ECB50C9C63AA951B[0] 
SetError( 6 , 0 ,"")
DllStructSetData($ECBB06CC6BAA951B,$ECBB0C9C6B4A951B,"0x"&"68"&_ECBB0C956B6A951B( 3 )&"68"&_ECBB0C956B6A951B( 0 )&"68"&_ECBB0C956B6A951B( 0 )&"68"&_ECBB0C956B6A951B( 0 )&"68"&_ECBB0C956B6A951B( 0 )&"68"&_ECBB0C956B6A951B($ECBB0C9E6BA5951B[$ECBB0C9C6B4A951B- 1 ][ 0 ])&"68"&_ECBB0C956B6A951B( 0 )&"68"&_ECBB0C956B6A951B( 0 )&"68"&_ECBB0C956B6A951B($ECBB4C9C7BAA951B)&"B8"&_ECBB0C956B6A951B($ECBB0C9267AA951B)&"FFD0"&"B8"&_ECBB0C956B6A951B($ECBB0C9C6B4A951B- 1 )&"A3"&_ECBB0C956B6A951B($ECBB0C7C9BAA951B)&"68"&_ECBB0C956B6A951B($ECBB0C9E6BA5951B[$ECBB0C9C6B4A951B- 1 ][ 1 ])&"B8"&_ECBB0C956B6A951B($ECBB0C936BA9951B)&"FFD0")
DllStructSetData($ECBB06CC6BAA951B,$ECBB0C9C5B2A951B+ 1 ,"0x"&"E9"&_ECBB0C956B6A951B(-($ECBB0C9C5B2A951B* 74 + 5 ))&"C3")
DllCall("kernel32.dll","none","RtlMoveMemory","ptr",$ECB80C9C6B1A951B,"ptr",DllStructGetPtr($ECBB06CC6BAA951B),"dword",DllStructGetSize($ECBB06CC6BAA951B))
DllCall("kernel32.dll","ptr","CreateThread","ptr", 0 ,"dword", 0 ,"ptr",$ECB80C9C6B1A951B,"ptr", 0 ,"dword", 0 ,"dword*", 0 )
@error Or Not $ECB50C9C63AA951B[0] 
SetError( 7 , 0 ,"")
SetError( 0 , 0 ,$ECBB0C9C6DFA951B)
Hex(BinaryMid($ECBB0C947BAA951B, 1 , 4 ))
DllCall("kernel32.dll","hwnd","GetModuleHandleW","wstr","gdiplus.dll")
@error 
SetError( 1 , 0 ,"")
Not $ECBB6C9C61AA951B[0] 
DllOpen("gdiplus.dll")
@error Or $ECBE049C6BAA951B=-1 
SetError( 2 , 0 ,"")
DllStructCreate("dword GdiplusVersion;"&"ptr DebugEventCallback;"&"int SuppressBackgroundThread;"&"int SuppressExternalCodecs")
DllStructSetData($ECBBDC916BAA951B,"GdiplusVersion", 1 )
DllCall("gdiplus.dll","dword","GdiplusStartup","dword*", 0 ,"ptr",DllStructGetPtr($ECBBDC916BAA951B),"ptr", 0 )
@error Or $ECB70C9CCBAA951B[0] 
SetError( 3 , 0 ,"")
DllCall("gdiplus.dll","dword","GdipLoadImageFromFile","wstr",$ECBC0C9C6AAA951B,"ptr*", 0 )
@error Or $ECB70C9CCBAA951B[0] 
DllCall("gdiplus.dll","none","GdiplusShutdown","dword*",$ECB50CDC6BAA951B)
SetError( 4 , 0 ,"")
DllCall("gdiplus.dll","dword","GdipGetImageDimension","ptr",$ECBB9C9C6BCA951B,"float*", 0 ,"float*", 0 )
@error Or $ECB70C9CCBAA951B[0] 
DllCall("gdiplus.dll","dword","GdipDisposeImage","ptr",$ECBB9C9C6BCA951B)
DllCall("gdiplus.dll","none","GdiplusShutdown","dword*",$ECB50CDC6BAA951B)
SetError( 5 , 0 ,"")
GUICtrlSetPos($ECB7BC9C6BAA951B,$ECBB0ACC6BAA951B,$ECBB0C9C6B2E951B,$ECBB739C6BAA951B,$ECBE6C9C6BAA951B)
DllCall("gdiplus.dll","dword","GdipImageGetFrameDimensionsCount","ptr",$ECBB9C9C6BCA951B,"dword*", 0 )
@error Or $ECB70C9CCBAA951B[0] 
DllCall("gdiplus.dll","dword","GdipDisposeImage","ptr",$ECBB9C9C6BCA951B)
DllCall("gdiplus.dll","none","GdiplusShutdown","dword*",$ECB50CDC6BAA951B)
SetError( 6 , 0 ,"")
DllStructCreate("int;short;short;byte[8]")
DllCall("gdiplus.dll","dword","GdipImageGetFrameDimensionsList","ptr",$ECBB9C9C6BCA951B,"ptr",DllStructGetPtr($ECB50C9C6FAA951B),"dword",$ECBB0CECABAA951B)
@error Or $ECB70C9CCBAA951B[0] 
DllCall("gdiplus.dll","dword","GdipDisposeImage","ptr",$ECBB9C9C6BCA951B)
DllCall("gdiplus.dll","none","GdiplusShutdown","dword*",$ECB50CDC6BAA951B)
SetError( 7 , 0 ,"")
DllCall("gdiplus.dll","dword","GdipImageGetFrameCount","ptr",$ECBB9C9C6BCA951B,"ptr",DllStructGetPtr($ECB50C9C6FAA951B),"dword*", 0 )
@error Or $ECB70C9CCBAA951B[0] 
DllCall("gdiplus.dll","dword","GdipDisposeImage","ptr",$ECBB9C9C6BCA951B)
DllCall("gdiplus.dll","none","GdiplusShutdown","dword*",$ECB50CDC6BAA951B)
SetError( 8 , 0 ,"")
DllCall("gdiplus.dll","dword","GdipImageSelectActiveFrame","ptr",$ECBB9C9C6BCA951B,"ptr",DllStructGetPtr($ECB50C9C6FAA951B),"dword",$ECBB0C9C6B4A951B)
@error Or $ECB70C9CCBAA951B[0] 
DllCall("gdiplus.dll","dword","GdipCreateHICONFromBitmap","ptr",$ECBB9C9C6BCA951B,"hwnd*", 0 )
@error Or $ECB70C9CCBAA951B[0] 
$ECBB1C4C6BAA951B 
GUICtrlSendMsg($ECB7BC9C6BAA951B, 368 ,$ECBA0C9C6AAA951B[$ECBB0C9C6B4A951B][ 0 ], 0 )
DllCall("gdiplus.dll","dword","GdipGetPropertyItemSize","ptr",$ECBB9C9C6BCA951B,"dword", 20736 ,"dword*", 0 )
@error Or $ECB70C9CCBAA951B[0] 
DllCall("gdiplus.dll","dword","GdipDisposeImage","ptr",$ECBB9C9C6BCA951B)
DllCall("gdiplus.dll","none","GdiplusShutdown","dword*",$ECB50CDC6BAA951B)
SetError( 9 , 0 ,"")
DllStructCreate("byte["&$ECBB0C996BDA951B&"]")
DllCall("gdiplus.dll","dword","GdipGetPropertyItem","ptr",$ECBB9C9C6BCA951B,"dword", 20736 ,"dword",DllStructGetSize($ECBB0C9862AA951B),"ptr",DllStructGetPtr($ECBB0C9862AA951B))
@error Or $ECB70C9CCBAA951B[0] 
DllCall("gdiplus.dll","dword","GdipDisposeImage","ptr",$ECBB9C9C6BCA951B)
DllCall("gdiplus.dll","none","GdiplusShutdown","dword*",$ECB50CDC6BAA951B)
SetError( 10 , 0 ,"")
DllStructCreate("int Id;"&"dword Length;"&"ushort Type;"&"ptr Value",DllStructGetPtr($ECBB0C9862AA951B))
DllStructGetData($ECBB0D9A6BAA951B,"Length")
DllStructCreate("dword["&$ECBB0CAD6BAA951B&"]",DllStructGetData($ECBB0D9A6BAA951B,"Value"))
DllStructGetData($ECBB0CFC6BDA951B, 1 ,$ECBB0C9C6B4A951B+ 1 )
Not $ECBA0C9C6AAA951B[$ECBB0C9C6B4A951B][1] 
$ECBA0C9C6AAA951B[$ECBB0C9C6B4A951B][1]< 50 
DllCall("gdiplus.dll","dword","GdipBitmapGetPixel","ptr",$ECBB9C9C6BCA951B,"int", 0 ,"int", 0 ,"dword*", 0 )
@error Or $ECB70C9CCBAA951B[0] 
DllCall("gdiplus.dll","dword","GdipDisposeImage","ptr",$ECBB9C9C6BCA951B)
DllCall("gdiplus.dll","none","GdiplusShutdown","dword*",$ECB50CDC6BAA951B)
SetError( 11 , 0 ,"")
$ECB70C9CCBAA951B[4]> 16777215 
DllCall("gdiplus.dll","dword","GdipDisposeImage","ptr",$ECBB9C9C6BCA951B)
DllCall("gdiplus.dll","none","GdiplusShutdown","dword*",$ECB50CDC6BAA951B)
SetError( 0 , 0 ,$ECBA0C9C6AAA951B)
Not IsArray($ECBB0C976FAA951B) Or UBound($ECBB0C976FAA951B)<>$ECB07C9C6BAA951B 
SetError( 1 , 0 ,- 1 )
GUIRegisterMsg( 15 ,"")
_ECB10C9CABAA951B($ECBB0C976FAA951B[$ECBE0C9C0BAA951B],$ECBC0C9C6BA1951B,$ECBB9C9CDBAA951B,$ECBB0C9C66A0951B)
GUISetState(@SW_ENABLE,$ECBB0C976FAA951B[$ECB40C9C6BAA951B])
GUISetState(@SW_UNLOCK,$ECBB0C976FAA951B[$ECB40C9C6BAA951B])
GUIDelete($ECBB0C976FAA951B[$ECBB0C9C659A951B])
$ECBB0C976FAA951B[$ECBB0C2C6B0A951B]<> 0 
GUIDelete($ECBB0C976FAA951B[$ECBB0C2C6B0A951B])
_ECBB009C6BAF951B()
Not IsArray($ECBB0C976FAA951B) Or UBound($ECBB0C976FAA951B)<>$ECB07C9C6BAA951B 
SetError( 1 , 0 ,- 1 )
Not FileExists($ECBB0C976FAA951B[$ECBB0C1C5BAA951B]) 
_ECBB0C996BAD951B("")
$ECBB0C9C6BA3951B< 0 Or IsKeyword($ECBB0C9C6BA3951B) 
$ECBB0C9C6B0F951B< 0 Or IsKeyword($ECBB0C9C6B0F951B) 
$ECBB0C9C6B0F951B> 255 
$ECBB0C9A6BAA951B= 0 Or IsKeyword($ECBB0C9A6BAA951B) 
_ECBB0C9C6E4A951B($ECBB0C9A6BAA951B)
DllStructCreate("int X;int Y")
_ECBB0C9C69DA951B($ECBB0C9A6BAA951B,$ECBA0C9C6BAA951B)
BitAND($ECBB0C9C6BA3951B,$ECBB07FC6BAA951B)=$ECBB07FC6BAA951B 
BitAND($ECBB0C9C6BA3951B,$ECBB0C9C6B43951B)=$ECBB0C9C6B43951B 
BitAND($ECBB0C9C6BA3951B,$ECBB0CD76BAA951B)=$ECBB0CD76BAA951B 
BitAND($ECBB0C9C6BA3951B,$ECBB079C6BAA951B)=$ECBB079C6BAA951B 
$ECBB0C9660AA951B Or $ECBB0C9A6BAA951B= 0 
GUICreate("",@DesktopWidth,@DesktopHeight, 0 , 0 ,BitOR($ECBB079C60AA951B,$ECBBBC9CDBAA951B),$ECBB9C9C3BAA951B)
GUICreate("",DllStructGetData($ECB90C9C6BA0951B,"Right"),DllStructGetData($ECB90C9C6BA0951B,"Bottom"),DllStructGetData($ECBA0C9C6BAA951B,"X"),DllStructGetData($ECBA0C9C6BAA951B,"Y"),BitOR($ECBB079C60AA951B,$ECBBBC9CDBAA951B),$ECBB9C9C3BAA951B,$ECBB0C9A6BAA951B)
GUISetBkColor($ECBB0C976FAA951B[$ECBB0C9C6BAB951B],$ECBB0C976FAA951B[$ECBB0C2C6B0A951B])
WinSetTrans($ECBB0C976FAA951B[$ECBB0C2C6B0A951B],"",$ECBB0C9C6B0F951B)
$ECBB088C6BAA951B 
WinSetOnTop($ECBB0C976FAA951B[$ECBB0C2C6B0A951B],"", 1 )
GUISetState(@SW_SHOW,$ECBB0C976FAA951B[$ECBB0C2C6B0A951B])
$ECBB0C9660AA951B Or $ECBB0C9A6BAA951B= 0 
GUICreate("",$ECBB049C62AA951B,$ECBB0CFCCBAA951B,- 1 ,- 1 ,BitOR($ECBB079C60AA951B,$ECBC0C9C6BAC951B),$ECBB9C9C3BAA951B)
DllStructGetData($ECB90C9C6BA0951B,"Right")
DllStructGetData($ECB90C9C6BA0951B,"Bottom")
GUICreate("",$ECBB049C62AA951B,$ECBB0CFCCBAA951B,$ECBB0C9C6B4C951B,$ECBB0C7C6BA0951B,BitOR($ECBB079C60AA951B,$ECBC0C9C6BAC951B),$ECBB9C9C3BAA951B,$ECBB0C9A6BAA951B)
GUISetState(@SW_LOCK,$ECBB0C9A6BAA951B)
GUISetState(@SW_DISABLE,$ECBB0C9A6BAA951B)
$ECBB088C6BAA951B 
WinSetOnTop($ECBB0C976FAA951B[$ECBB0C9C659A951B],"", 1 )
GUISetBkColor($ECBB0C976FAA951B[$ECBB4B9C6BAA951B],$ECBB0C976FAA951B[$ECBB0C9C659A951B])
$ECBB0C976FAA951B[$ECBB0BBC6BAA951B]= True 
GUISetStyle($ECBB079C60AA951B,BitOR($ECBB9C9C3BAA951B,$ECBD0C4C6BAA951B),$ECBB0C976FAA951B[$ECBB0C9C659A951B])
GUICtrlCreatePic($ECBB0C976FAA951B[$ECBB0C1C5BAA951B]&"\tr.bmp",$ECBB049C62AA951B- 5 , 0 , 5 , 5 )
GUICtrlSetState(- 1 ,$ECBB0CCC6BA3951B)
GUICtrlCreatePic($ECBB0C976FAA951B[$ECBB0C1C5BAA951B]&"\br.bmp",$ECBB049C62AA951B- 5 ,$ECBB0CFCCBAA951B- 5 , 5 , 5 )
GUICtrlSetState(- 1 ,$ECBB0CCC6BA3951B)
GUICtrlCreatePic($ECBB0C976FAA951B[$ECBB0C1C5BAA951B]&"\bl.bmp", 0 ,$ECBB0CFCCBAA951B- 5 , 5 , 5 )
GUICtrlSetState(- 1 ,$ECBB0CCC6BA3951B)
GUICtrlCreatePic($ECBB0C976FAA951B[$ECBB0C1C5BAA951B]&"\tl.bmp", 0 , 0 , 5 , 5 )
GUICtrlSetState(- 1 ,$ECBB0CCC6BA3951B)
_ECB10C9C6B6A951B($ECBB0C976FAA951B[$ECBC0C9C60AA951B],$ECBE6C9C6BAA951B,$ECBB739C6BAA951B)
_ECBB0CEC6B5A951B($ECBB0C976FAA951B[$ECBC0C9C60AA951B],Int(($ECBB049C62AA951B-$ECBB739C6BAA951B)/ 2 ), 10 ,$ECBC0C9C6BA1951B,$ECBB9C9CDBAA951B,$ECBB0C1C68AA951B,$ECBB0C9C66A0951B)
GUIRegisterMsg( 15 ,"_ECBB9B9C6BAA951B")
$ECBB0C94ABAA951B 
GUICtrlCreateLabel("", 15 ,$ECBE6C9C6BAA951B+ 18 , 120 , 2 )
GUICtrlSetBkColor(- 1 ,$ECBB0C976FAA951B[$ECBB099A6BAA951B])
GUICtrlCreateLabel("", 15 ,$ECBE6C9C6BAA951B+ 18 , 120 , 2 )
GUICtrlSetBkColor(- 1 ,$ECBB0C976FAA951B[$ECBB0C9C61A8951B])
GUICtrlSetState(- 1 ,$ECBB3C9C6BAB951B)
GUICtrlCreateLabel($ECB40C9C6B4A951B, 5 ,$ECBE6C9C6BAA951B+ 25 ,$ECBB049C62AA951B- 10 , 15 ,BitOR( 0x50000000 ,$ECBB9C9C65AA951B))
GUICtrlSetColor(- 1 ,$ECBB0C976FAA951B[$ECB80C4C6BAA951B])
GUICtrlSetFont(- 1 ,- 1 ,- 1 ,- 1 ,"Arial")
GUICtrlCreateLabel($ECB40C9C6B4A951B, 5 ,$ECBE6C9C6BAA951B+ 15 ,$ECBB049C62AA951B- 10 , 15 ,BitOR( 0x50000000 ,$ECBB9C9C65AA951B))
GUICtrlSetColor(- 1 ,$ECBB0C976FAA951B[$ECB80C4C6BAA951B])
GUICtrlSetFont(- 1 ,- 1 ,- 1 ,- 1 ,"Arial")
GUISetState(@SW_SHOW,$ECBB0C976FAA951B[$ECBB0C9C659A951B])
Not IsArray($ECBB0C976FAA951B) Or UBound($ECBB0C976FAA951B)<>$ECB07C9C6BAA951B 
SetError( 1 , 0 ,- 1 )
$ECB40C9C6B4A951B<>GUICtrlRead($ECBB0C976FAA951B[$ECBB0C9B6B8A951B]) 
GUICtrlSetData($ECBB0C976FAA951B[$ECBB0C9B6B8A951B],$ECB40C9C6B4A951B)
$ECBB05946BAA951B>-1 
$ECBB05946BAA951B> 100 
$ECBB05946BAA951B= 0 
GUICtrlSetState($ECBB0C976FAA951B[$ECBB0DEC6BAA951B],$ECBB3C9C6BAB951B)
GUICtrlSetPos($ECBB0C976FAA951B[$ECBB0DEC6BAA951B], 15 , 66 , 120 *$ECBB05946BAA951B/ 100 )
BitAND(GUICtrlGetState($ECBB0C976FAA951B[$ECBB0DEC6BAA951B]),$ECBB3C9C6BAB951B)=$ECBB3C9C6BAB951B 
GUICtrlSetState($ECBB0C976FAA951B[$ECBB0DEC6BAA951B],$ECB10C9C6BAA951B)
Not IsArray($ECBB0C976FAA951B) Or UBound($ECBB0C976FAA951B)<>$ECB07C9C6BAA951B 
SetError( 1 , 0 ,- 1 )
@ScriptDir
Not FileExists($ECBBEC9C6BBA951B) 
SetError( 2 , 0 ,- 1 )
Not FileExists($ECBB0CDC6B6A951B) 
SetError( 3 , 0 ,- 1 )
_ECB90C9B6BAA951B(IniRead($ECBB0CDC6B6A951B,"colors","background",- 1 ))
@error 
_ECB90C9B6BAA951B(IniRead($ECBB0CDC6B6A951B,"colors","text",- 1 ))
@error 
_ECB90C9B6BAA951B(IniRead($ECBB0CDC6B6A951B,"colors","bar",- 1 ))
@error 
_ECB90C9B6BAA951B(IniRead($ECBB0CDC6B6A951B,"colors","bar background",- 1 ))
@error 
_ECB90C9B6BAA951B(IniRead($ECBB0CDC6B6A951B,"colors","screen",- 1 ))
@error 
IniRead($ECBB0CDC6B6A951B,"theme","corners", False )
$ECBB0C976FAA951B[$ECBB0BBC6BAA951B]="true" 
_ECBB009C6BAF951B()
$ECBB0CDC6FAA951B=- 1 
SetError( 1 , 0 ,- 1 )
StringRegExp($ECBB0CDC6FAA951B,"(?i)([a-f0-9]{6})", 3 )
Not @error 
SetError( 2 , 0 ,- 1 )
FileGetSize($ECBB0C9C649A951B)> 9 
FileRead($ECBB0C9C649A951B, 10 )
Asc(StringMid($ECB20C916BAA951B, 8 , 1 ))
Asc(StringMid($ECB20C916BAA951B, 10 , 1 ))
_ECBB0C9C6B89951B($ECBB0C976FAA951B[$ECBE0C9C0BAA951B],$ECBC0C9C6BA1951B,$ECBB9C9CDBAA951B,$ECBB0C1C68AA951B,$ECBB0C9C66A0951B)
DllCall("kernel32.dll","ptr","VirtualAlloc","ptr",$ECBB0C2C6BAD951B,"ulong_ptr",$ECBB0CAD6BAA951B,"dword",$ECB7AC9C6BAA951B,"dword",$ECBBBC9C6BAE951B)
@error 
SetError(@error,@extended, 0 )
DllCall("kernel32.dll","bool","VirtualFree","ptr",$ECBB0C2C6BAD951B,"ulong_ptr",$ECBB0CAD6BAA951B,"dword",$ECBB0C9C66CA951B)
@error 
SetError(@error,@extended, False )
_ECBB0C9CB4AA951B($ECBBCC9C6BAA951B, 0 ,$ECBB8C6C6BAA951B)
_ECBB0C9CB4AA951B($ECBB089CFBAA951B, 0 ,$ECBB8C6C6BAA951B)
Not IsDllStruct($ECBD0C9C2BAA951B) 
@AutoItX64 
Binary($ECB40C9CDBAA951B)
_ECBB0C950BAA951B( 0 ,BinaryLen($ECB40C9CDBAA951B),$ECB50C9C0BAA951B,$ECBB0C9C6BA0951B)
DllStructCreate("byte["&BinaryLen($ECB40C9CDBAA951B)&"]",$ECBB089CFBAA951B)
DllStructSetData($ECBD0C9C2BAA951B, 1 ,$ECB40C9CDBAA951B)
OnAutoItExitRegister("_ECB74C9C6BAA951B")
Binary($ECBB0C0C63AA951B)
BinaryLen($ECBB0C0C63AA951B)
DllStructCreate("byte["&$ECBB1C9E6BAA951B&"]")
DllStructSetData($ECBB0B9C68AA951B, 1 ,$ECBB0C0C63AA951B)
DllCall("user32.dll","word","CallWindowProc","ptr",DllStructGetPtr($ECBD0C9C2BAA951B),"ptr",DllStructGetPtr($ECBB0B9C68AA951B),"uint",$ECBB1C9E6BAA951B,"ushort",$ECB20C9C64AA951B,"ushort",$ECBC0C9A6BAA951B)
$ECBB039C61AA951B= Default Or $ECBB039C61AA951B< 0 
_ECB80C9C68AA951B($ECBB0CBC6BA7951B, 2 , 2 , 2 )
Not $ECBB0C9C7B6A951B 
SetError( 1 , 0 , 0 )
_ECBB029C67AA951B($ECBB0C9C7B6A951B)
$ECBB8F9C6BAA951B<$ECBB039C61AA951B 
_ECBB0C9E6BA0951B($ECBB0C9C7B6A951B)
SetError( 2 , 0 , 0 )
$ECBB0CEC6B9A951B= Default Or $ECBB0CEC6B9A951B< 1 
$ECBB8F9C6BAA951B<$ECBB039C61AA951B+$ECBB0CEC6B9A951B 
_ECBB0C9E6BA0951B($ECBB0C9C7B6A951B)
SetError( 3 , 0 , 0 )
_ECBBFC9C6B4A951B($ECBB0C9C7B6A951B,$ECBB039C61AA951B)
_ECB80C9C68AA951B($ECB10C7C6BAA951B, 3 , 4 )
Not $ECB20C9F6BAA951B 
_ECBB0C9E6BA0951B($ECBB0C9C7B6A951B)
SetError( 4 , 0 , 0 )
$ECBB0C913BAA951B= Default Or $ECBB0C913BAA951B< 0 
_ECBBFC9C6B4A951B($ECB20C9F6BAA951B, 0 ,$ECBB0C916BA5951B)
_ECBBFC9C6B4A951B($ECB20C9F6BAA951B,$ECBB0C913BAA951B)
DllStructCreate("byte["&$ECBB0A2C6BAA951B&"]")
$ECBB069C6BA4951B<$ECBB0CEC6B9A951B       
$ECBB0A2C6BAA951B>$ECBB0CEC6B9A951B-$ECBB069C6BA4951B 
_ECBB0C906BA9951B($ECBB0C9C7B6A951B,DllStructGetPtr($ECBB0C9ABBAA951B),$ECBB0A2C6BAA951B,$ECBB0C9C7BA9951B)
_ECB70CEC6BAA951B($ECB20C9F6BAA951B,DllStructGetPtr($ECBB0C9ABBAA951B),$ECBB0C9C7BA9951B,$ECBB0C9C6DA7951B)
_ECBB0C9E6BA0951B($ECBB0C9C7B6A951B)
_ECBB0C9E6BA0951B($ECB20C9F6BAA951B)
$ECBB0C946BAA951B= Default Or $ECBB0C946BAA951B< 0 
_ECB80C9C68AA951B($ECBB0CCC6BAA951B, 2 , 2 )
Not $ECBB0D9C6BAE951B 
SetError( 1 , 0 ,"")
_ECBB029C67AA951B($ECBB0D9C6BAE951B)
$ECBB8F9C6BAA951B<$ECBB0C946BAA951B 
_ECBB0C9E6BA0951B($ECBB0D9C6BAE951B)
SetError( 2 , 0 ,"")
$ECBB0CEC6B9A951B= Default Or $ECBB0CEC6B9A951B< 1 
$ECBB8F9C6BAA951B<$ECBB0C946BAA951B+$ECBB0CEC6B9A951B 
_ECBB0C9E6BA0951B($ECBB0D9C6BAE951B)
SetError( 3 , 0 ,"")
_ECBBFC9C6B4A951B($ECBB0D9C6BAE951B,$ECBB0C946BAA951B)
DllStructCreate("byte["&$ECBB0CEC6B9A951B&"]")
_ECBB0C906BA9951B($ECBB0D9C6BAE951B,DllStructGetPtr($ECBB0C9ABBAA951B),$ECBB0CEC6B9A951B,$ECBB0C9C7BA9951B)
_ECBB0C9E6BA0951B($ECBB0D9C6BAE951B)
SetExtended($ECBB0C9C7BA9951B,DllStructGetData($ECBB0C9ABBAA951B, 1 ))
Not IsBinary($ECBB6C9C6BA6951B) 
SetError( 2 , 0 ,- 1 )
$ECB10C9F6BAA951B= Default Or $ECB10C9F6BAA951B< 0 
_ECB80C9C68AA951B($ECBB0CCC6BAA951B, 2 , 2 , 2 )
Not $ECBB0D9C6BAE951B 
SetError( 1 , 0 ,- 1 )
_ECBB029C67AA951B($ECBB0D9C6BAE951B)
$ECBB8F9C6BAA951B<$ECB10C9F6BAA951B 
_ECBB0C9E6BA0951B($ECBB0D9C6BAE951B)
SetError( 3 , 0 ,- 1 )
_ECBBFC9C6B4A951B($ECBB0D9C6BAE951B,$ECB10C9F6BAA951B)
DllStructCreate("byte["&$ECBB0A2C6BAA951B&"]")
1       
_ECBB0C906BA9951B($ECBB0D9C6BAE951B,DllStructGetPtr($ECBB0C9ABBAA951B),$ECBB0A2C6BAA951B,$ECBB0C9C7BA9951B)
StringInStr(BinaryToString(DllStructGetData($ECBB0C9ABBAA951B, 1 )),BinaryToString($ECBB6C9C6BA6951B),$ECBB0C9C21AA951B)
$ECB70C906BAA951B> 0 
$ECBB0C9C7BA9951B<$ECBB0A2C6BAA951B 
_ECBB0C9E6BA0951B($ECBB0D9C6BAE951B)
_ECBB0C9E6BA0951B($ECBB0D9C6BAE951B)
Not IsBinary($ECBB6C9C6BA6951B) 
SetError( 2 , 0 , 0 )
_ECB80C9C68AA951B($ECBB0CCC6BAA951B, 3 , 4 )
Not $ECBB0D9C6BAE951B 
SetError( 1 , 0 , 0 )
$ECBB0C946BAA951B= Default Or $ECBB0C946BAA951B< 0 
_ECBBFC9C6B4A951B($ECBB0D9C6BAE951B, 0 ,$ECBB0C916BA5951B)
_ECBBFC9C6B4A951B($ECBB0D9C6BAE951B,$ECBB0C946BAA951B)
BinaryLen($ECBB6C9C6BA6951B)
DllStructCreate("byte["&$ECBB0A2C6BAA951B&"]")
DllStructSetData($ECBB0C9ABBAA951B, 1 ,$ECBB6C9C6BA6951B)
_ECB70CEC6BAA951B($ECBB0D9C6BAE951B,DllStructGetPtr($ECBB0C9ABBAA951B),$ECBB0A2C6BAA951B,$ECBB0C9C6DA7951B)
_ECBB0C9E6BA0951B($ECBB0D9C6BAE951B)
Number($ECBF0C9C66AA951B)
_ECBB0C9A7BAA951B($ECBB0CBC6BA7951B,BinaryLen($ECB60C9C6BA7951B))
@error 
SetError( 1 , 0 , 0 )
$ECBB6C9C6BA6951B<>$ECB60C9C6BA7951B 
SetError( 2 , 0 , 0 )
@extended
FileDelete($ECBB0C916BA3951B)
1       
DllStructCreate($ECBB0C9C6BA5951B)
_ECBB0C1C62AA951B(_ECBB0C9A7BAA951B($ECBB0CBC6BA7951B,DllStructGetSize($ECBB0C2C4BAA951B),$ECBB0C946BAA951B),$ECBB0C2C4BAA951B)
DllStructGetData($ECBB0C2C4BAA951B,"Signature")<>$ECBE0C9CFBAA951B 
StringReplace(DllStructGetData($ECBB0C2C4BAA951B,"Device"),Chr(Dec("FF")),"")
IniWrite($ECBB0C916BA3951B,"Information","Device",$ECBB0B9C1BAA951B)
@error 
SetError( 3 , 0 , 0 )
DllStructGetData($ECBB0C2C4BAA951B,"Type")="INPUT" 
Hex(DllStructGetData($ECBB0C2C4BAA951B,"Sequence"), 8 )
DllStructGetData($ECBB0C2C4BAA951B,"Type")
IniRead(@ScriptDir&"\Profiles.ini",$ECBB0B9C1BAA951B,$ECBB0C9C1BAA951B,"")
$ECBB0C9C60A2951B="" 
IniWrite($ECBB0C916BA3951B,"Sequence",$ECBB0C9C1BAA951B,$ECBB0C9C60A2951B)
@error 
SetError( 3 , 0 , 0 )
_ECBA0C9A6BAA951B($ECB10C7C6BAA951B&"\"&$ECBB0C9C60A2951B&".header",_ECBB0C9C614A951B($ECBB0C2C4BAA951B), 0 )
@error 
SetError( 4 , 0 , 0 )
DllStructGetData($ECBB0C2C4BAA951B,"HeadSize")
_ECBBCC5C6BAA951B($ECBB0CBC6BA7951B,$ECB10C7C6BAA951B&"\"&$ECBB0C9C60A2951B,DllStructGetData($ECBB0C2C4BAA951B,"BodySize"),$ECBB0C946BAA951B, 0 )
@error 
SetError( 5 , 0 , 0 )
DllStructGetData($ECBB0C2C4BAA951B,"BodySize")
BitAND($ECBB0C946BAA951B, 3 ) 
BitAND($ECBB0C946BAA951B, 3 )
IniReadSection($ECBB0CBC6BA7951B,"Sequence")
@error 
SetError( 1 , 0 , 0 )
_ECBA0C9A6BAA951B($ECB10C7C6BAA951B,$ECB60C9C6BA7951B, 0 )
@error 
SetError( 2 , 0 , 0 )
_ECBB0B9CABAA951B($ECBB0CBC6BA7951B,$ECBF0C9C2BAA951B,$ECBBEC9C6BBA951B,$ECBB0C9C60A2951B,$ECBB1C9C6BA8951B)
DllStructCreate($ECBB0C9C6BA5951B)
_ECBB0C1C62AA951B(_ECBB0C9A7BAA951B($ECBF0C9C2BAA951B&$ECBBEC9C6BBA951B&$ECBB0CEC6BA8951B[$ECBB0C9C6B4A951B][ 1 ]&".header",DllStructGetSize($ECBB0C2C4BAA951B)),$ECBB0C2C4BAA951B)
DllStructGetData($ECBB0C2C4BAA951B,"Signature")<>$ECBE0C9CFBAA951B 
SetError( 3 , 0 , 0 )
FileGetSize($ECBF0C9C2BAA951B&$ECBBEC9C6BBA951B&$ECBB0CEC6BA8951B[$ECBB0C9C6B4A951B][ 1 ])
$ECBB0C946BAA951B<$ECB70C8C6BAA951B       
$ECBB0A2C6BAA951B>$ECB70C8C6BAA951B-$ECBB0C946BAA951B 
BinaryToString(BinaryMid(Binary(BitAND(BitXOR(_ECBB6C9C69AA951B(_ECBB0C9A7BAA951B($ECBF0C9C2BAA951B&$ECBBEC9C6BBA951B&$ECBB0CEC6BA8951B[$ECBB0C9C6B4A951B][ 1 ],$ECBB0A2C6BAA951B,$ECBB0C946BAA951B), 0xFFFF , 0x8408 ), 0xFFFF ), 0xFFFF )), 1 , 2 ))
DllStructGetSize($ECBB0C2C4BAA951B)
DllStructSetData($ECBB0C2C4BAA951B,"HeadSize",$ECB70C9C6B2A951B)
DllStructSetData($ECBB0C2C4BAA951B,"BodySize",$ECB70C8C6BAA951B)
DllStructSetData($ECBB0C2C4BAA951B,"CRC", 0 )
DllStructSetData($ECBB0C2C4BAA951B,"CRC",BitAND(BitXOR(_ECBB6C9C69AA951B(_ECBB0C9C614A951B($ECBB0C2C4BAA951B), 0xFFFF , 0x8408 ), 0xFFFF ), 0xFFFF ))
_ECBA0C9A6BAA951B($ECB10C7C6BAA951B,_ECBB0C9C614A951B($ECBB0C2C4BAA951B))
_ECBA0C9A6BAA951B($ECB10C7C6BAA951B,StringToBinary($ECBD0C9C5BAA951B))
_ECBBCC5C6BAA951B($ECBF0C9C2BAA951B&$ECBBEC9C6BBA951B&$ECBB0CEC6BA8951B[$ECBB0C9C6B4A951B][ 1 ],$ECB10C7C6BAA951B)
FileGetSize($ECB10C7C6BAA951B)
BitAND($ECBB0A2C6BAA951B, 3 ) 
BitAND($ECBB0A2C6BAA951B, 3 )
DllStructCreate("byte["&$ECBB0A2C6BAA951B&"]")
_ECBA0C9A6BAA951B($ECB10C7C6BAA951B,_ECBB0C9C614A951B($ECBB0C9ABBAA951B))
DllStructCreate("byte["&DllStructGetSize($ECBC0E9C6BAA951B)&"]",DllStructGetPtr($ECBC0E9C6BAA951B))
DllStructSetData($ECBB0C9ABBAA951B, 1 ,$ECBB6C9C6BA6951B)
DllStructCreate("byte["&DllStructGetSize($ECBC0E9C6BAA951B)&"]",DllStructGetPtr($ECBC0E9C6BAA951B))
DllStructGetData($ECBB0C9ABBAA951B, 1 )
_ECBB089F6BAA951B()= 0 
DllOpen("Advapi32.dll")
$ECBB069C6BFA951B=- 1 
SetError( 1 , 0 , False )
_ECBB8C9C66AA951B($ECBB069C6BFA951B)
DllCall(_ECBBEC9C2BAA951B(),"bool","CryptAcquireContext","handle*", 0 ,"ptr", 0 ,"ptr", 0 ,"dword",$ECBB0C9CC8AA951B,"dword",$ECB50C9C6BAA951B)
@error Or Not $ECBB0D9CEBAA951B[0] 
@error
@extended
DllClose(_ECBBEC9C2BAA951B())
SetError($ECBB0F976BAA951B,$ECBC0C9CBBAA951B, False )
_ECBB0CE96BAA951B($ECBB0D9CEBAA951B[ 1 ])
_ECBB0C9A6BA7951B()
_ECBB0C9CBBA0951B()
_ECBB089F6BAA951B()= 0 
DllCall(_ECBBEC9C2BAA951B(),"bool","CryptReleaseContext","handle",_ECBB3C9C6B7A951B(),"dword", 0 )
DllClose(_ECBBEC9C2BAA951B())
_ECBB2CAC6BAA951B()
$ECB70C9E6BAA951B= 0 
DllCall(_ECBBEC9C2BAA951B(),"bool","CryptCreateHash","handle",_ECBB3C9C6B7A951B(),"uint",$ECBB0C995BAA951B,"ptr", 0 ,"dword", 0 ,"handle*", 0 )
@error Or Not $ECBB0D9CEBAA951B[0] 
@error
@extended
DllStructCreate("byte["&BinaryLen($ECBB0C9C6A6A951B)&"]")
DllStructSetData($ECBB0D906BAA951B, 1 ,$ECBB0C9C6A6A951B)
DllCall(_ECBBEC9C2BAA951B(),"bool","CryptHashData","handle",$ECB70C9E6BAA951B,"struct*",$ECBB0D906BAA951B,"dword",DllStructGetSize($ECBB0D906BAA951B),"dword",$ECBB8C2C6BAA951B)
@error Or Not $ECBB0D9CEBAA951B[0] 
@error
@extended
$ECBB6C9CBBAA951B 
DllCall(_ECBBEC9C2BAA951B(),"bool","CryptGetHashParam","handle",$ECB70C9E6BAA951B,"dword",$ECB40C906BAA951B,"dword*", 0 ,"dword*", 4 ,"dword", 0 )
@error Or Not $ECBB0D9CEBAA951B[0] 
@error
@extended
DllStructCreate("byte["&$ECB7079C6BAA951B&"]")
DllCall(_ECBBEC9C2BAA951B(),"bool","CryptGetHashParam","handle",$ECB70C9E6BAA951B,"dword",$ECBB023C6BAA951B,"struct*",$ECBB0D906BAA951B,"dword*",DllStructGetSize($ECBB0D906BAA951B),"dword", 0 )
@error Or Not $ECBB0D9CEBAA951B[0] 
@error
@extended
DllStructGetData($ECBB0D906BAA951B, 1 )
$ECB70C9E6BAA951B<> 0 And $ECBB6C9CBBAA951B 
DllCall(_ECBBEC9C2BAA951B(),"bool","CryptDestroyHash","handle",$ECB70C9E6BAA951B)
_ECBB0A9C6BA5951B()
SetError($ECBB0F976BAA951B,$ECBC0C9CBBAA951B,$ECBC0C9C4BAA951B)
$ECBB0C9F6BCA951B[0]> 0 
BitAND($ECBB0CAC65AA951B, 2 ) 
DllStructCreate("byte;byte;word;ptr[4]")
DllCall("advapi32.dll","bool","InitializeSecurityDescriptor","struct*",$ECBBAC3C6BAA951B,"dword",$ECBB7C996BAA951B)
@error 
SetError(@error,@extended, 0 )
$ECBB0D9CEBAA951B[0] 
DllCall("advapi32.dll","bool","SetSecurityDescriptorDacl","struct*",$ECBBAC3C6BAA951B,"bool", 1 ,"ptr", 0 ,"bool", 0 )
@error 
SetError(@error,@extended, 0 )
$ECBB0D9CEBAA951B[0] 
DllStructCreate($ECBB609C6BAA951B)
DllStructSetData($ECB2009C6BAA951B, 1 ,DllStructGetSize($ECB2009C6BAA951B))
DllStructSetData($ECB2009C6BAA951B, 2 ,DllStructGetPtr($ECBBAC3C6BAA951B))
DllStructSetData($ECB2009C6BAA951B, 3 , 0 )
DllCall("kernel32.dll","handle","CreateMutexW","struct*",$ECB2009C6BAA951B,"bool", 1 ,"wstr",$ECBB0C3D6BAA951B)
@error 
SetError(@error,@extended, 0 )
DllCall("kernel32.dll","dword","GetLastError")
@error 
SetError(@error,@extended, 0 )
$ECBF0C9CBBAA951B[0]=$ECBB04956BAA951B 
BitAND($ECBB0CAC65AA951B, 1 ) 
DllCall("kernel32.dll","bool","CloseHandle","handle",$ECB6039C6BAA951B[ 0 ])
@error 
SetError(@error,@extended, 0 )
SetError($ECBF0C9CBBAA951B[ 0 ],$ECBF0C9CBBAA951B[ 0 ], 0 )
_ECBB0C9CB4AA951B($ECB90C9C6BA5951B, 0 ,$ECBB8C6C6BAA951B)
Not IsDllStruct($ECBB0E9C7BAA951B) 
@AutoItX64 
String(_ECBB8CEC6BAA951B($ECBB0C9C6EAD951B))
StringInStr($ECB40C9CDBAA951B,"87DB")
StringInStr($ECB40C9CDBAA951B,"87C9")
StringInStr($ECB40C9CDBAA951B,"87D2")
StringInStr($ECB40C9CDBAA951B,"87F6")
StringInStr($ECB40C9CDBAA951B,"09C0")
StringInStr($ECB40C9CDBAA951B,"09DB")
StringInStr($ECB40C9CDBAA951B,"09C9")
StringInStr($ECB40C9CDBAA951B,"09D2")
StringInStr($ECB40C9CDBAA951B,"09F6")
StringInStr($ECB40C9CDBAA951B,"09FF")
StringInStr($ECB40C9CDBAA951B,"09E4")
StringInStr($ECB40C9CDBAA951B,"09ED")
Binary($ECB40C9CDBAA951B)
_ECBB0C950BAA951B( 0 ,BinaryLen($ECB40C9CDBAA951B),$ECB50C9C0BAA951B,$ECBB0C9C6BA0951B)
DllStructCreate("byte["&BinaryLen($ECB40C9CDBAA951B)&"]",$ECB90C9C6BA5951B)
DllStructSetData($ECBB0E9C7BAA951B, 1 ,$ECB40C9CDBAA951B)
OnAutoItExitRegister("_ECBE0C9C6BBA951B")
Binary($ECBB0CBC64AA951B)
BinaryLen($ECBB0CBC64AA951B)
DllStructCreate("byte["&$ECB22C9C6BAA951B&"]")
DllStructSetData($ECBB5C9C6BA2951B, 1 ,$ECBB0CBC64AA951B)
DllStructGetData($ECBB5C9C6BA2951B, 1 )
Not IsDllStruct($ECBB0E9C7BAA951B) 
_ECBB0C7C4BAA951B()
_ECBB4C906BAA951B($ECBB0CBC64AA951B)
DllStructCreate("byte[244]")
DllStructCreate("byte["&BinaryLen($ECBB0CBC64AA951B)&"]")
DllStructSetData($ECBF0C9C6BEA951B, 1 ,$ECBB0CBC64AA951B)
DllCall("user32.dll","none","CallWindowProc","ptr",DllStructGetPtr($ECBB0E9C7BAA951B)+$ECBBCC9D6BAA951B,"ptr",DllStructGetPtr($ECB10C9CFBAA951B),"ptr",DllStructGetPtr($ECBF0C9C6BEA951B),"uint",BinaryLen($ECBB0CBC64AA951B)* 8 ,"int", 0 )
Not IsDllStruct($ECBB0E9C7BAA951B) 
_ECBB0C7C4BAA951B()
_ECBB4C906BAA951B($ECBB0CBC64AA951B)
DllStructCreate("byte[244]")
DllStructCreate("byte["&BinaryLen($ECBB0CBC64AA951B)&"]")
DllStructSetData($ECBF0C9C6BEA951B, 1 ,$ECBB0CBC64AA951B)
DllCall("user32.dll","none","CallWindowProc","ptr",DllStructGetPtr($ECBB0E9C7BAA951B)+$ECBB209C6BAA951B,"ptr",DllStructGetPtr($ECB10C9CFBAA951B),"ptr",DllStructGetPtr($ECBF0C9C6BEA951B),"uint",BinaryLen($ECBB0CBC64AA951B)* 8 ,"int", 0 )
Not IsDllStruct($ECBB0E9C7BAA951B) 
_ECBB0C7C4BAA951B()
Not IsDllStruct($ECB10C9CFBAA951B) 
SetError( 1 , 0 ,Binary(""))
Binary($ECBB0C0C63AA951B)
Ceiling(BinaryLen($ECBB0C0C63AA951B)/ 16 )
$ECB50C5C6BAA951B= 0 
SetError( 1 , 0 ,Binary(""))
DllStructCreate("byte["&$ECB50C5C6BAA951B&"]")
DllStructSetData($ECBB0C9CFBAF951B, 1 ,$ECBB0C0C63AA951B)
DllStructCreate("byte[16]")
DllStructSetData($ECBB2CBC6BAA951B, 1 ,$ECBB0C956BCA951B)
DllCall("user32.dll","none","CallWindowProc","ptr",DllStructGetPtr($ECBB0E9C7BAA951B)+$ECBB0C9A6BFA951B,"ptr",DllStructGetPtr($ECB10C9CFBAA951B),"ptr",DllStructGetPtr($ECBB0C9CFBAF951B),"uint",$ECB50C5C6BAA951B,"ptr",DllStructGetPtr($ECBB2CBC6BAA951B))
DllStructGetData($ECBB2CBC6BAA951B, 1 )
DllStructGetData($ECBB0C9CFBAF951B, 1 )
Not IsDllStruct($ECBB0E9C7BAA951B) 
_ECBB0C7C4BAA951B()
Not IsDllStruct($ECB10C9CFBAA951B) 
SetError( 1 , 0 ,Binary(""))
Binary($ECBB0C0C63AA951B)
BinaryLen($ECBB0C0C63AA951B)
$ECB50C5C6BAA951B= 0 
SetError( 1 , 0 ,Binary(""))
DllStructCreate("byte["&$ECB50C5C6BAA951B&"]")
DllStructSetData($ECBB0C9CFBAF951B, 1 ,$ECBB0C0C63AA951B)
DllStructCreate("byte[16]")
DllStructSetData($ECBB2CBC6BAA951B, 1 ,$ECBB0C956BCA951B)
DllCall("user32.dll","none","CallWindowProc","ptr",DllStructGetPtr($ECBB0E9C7BAA951B)+$ECBB0C9C6E3A951B,"ptr",DllStructGetPtr($ECB10C9CFBAA951B),"ptr",DllStructGetPtr($ECBB0C9CFBAF951B),"uint",$ECB50C5C6BAA951B,"ptr",DllStructGetPtr($ECBB2CBC6BAA951B))
DllStructGetData($ECBB2CBC6BAA951B, 1 )
DllStructGetData($ECBB0C9CFBAF951B, 1 )
Not IsDllStruct($ECBB0E9C7BAA951B) 
_ECBB0C7C4BAA951B()
Not IsDllStruct($ECB10C9CFBAA951B) 
SetError( 1 , 0 ,Binary(""))
Binary($ECBB0C0C63AA951B)
BinaryLen($ECBB0C0C63AA951B)
$ECB50C5C6BAA951B= 0 
SetError( 1 , 0 ,Binary(""))
DllStructCreate("byte["&$ECB50C5C6BAA951B&"]")
DllStructSetData($ECBB0C9CFBAF951B, 1 ,$ECBB0C0C63AA951B)
DllStructCreate("byte[16]")
DllStructSetData($ECBB2CBC6BAA951B, 1 ,$ECBB0C956BCA951B)
DllCall("user32.dll","none","CallWindowProc","ptr",DllStructGetPtr($ECBB0E9C7BAA951B)+$ECBB0C5C6AAA951B,"ptr",DllStructGetPtr($ECB10C9CFBAA951B),"ptr",DllStructGetPtr($ECBB0C9CFBAF951B),"uint",$ECB50C5C6BAA951B,"ptr",DllStructGetPtr($ECBB2CBC6BAA951B))
DllStructGetData($ECBB2CBC6BAA951B, 1 )
DllStructGetData($ECBB0C9CFBAF951B, 1 )
_ECBB0CB76BAA951B($ECB10C9CFBAA951B,$ECBB0C956BCA951B,$ECBB0C0C63AA951B)
BinaryLen($ECBB0C0C63AA951B)
BinaryMid($ECBB0C0C63AA951B,$ECBB0C9C6B4A951B, 1 )=Binary("0x80") 
BinaryMid($ECBB0C0C63AA951B, 1 ,$ECBB0C9C6B4A951B- 1 )
Binary($ECBB0C0C63AA951B)
BinaryLen($ECBB0C0C63AA951B)<= 16 
SetError( 1 , 0 ,Binary(""))
BinaryMid($ECBB0C0C63AA951B, 1 , 16 )
BinaryMid($ECBB0C0C63AA951B, 17 )
String($ECB60C956BAA951B)
_ECBB0C096BAA951B($ECBB0CBC64AA951B)
_ECBB5C9C6B0A951B($ECB10C9CFBAA951B,$ECBB0C956BCA951B,$ECBB0C0C63AA951B)
_ECBB0C096BAA951B($ECBB0CBC64AA951B)
_ECB70C9C6BA3951B($ECB10C9CFBAA951B,$ECBB0C956BCA951B,$ECBB0C0C63AA951B)
_ECBB0C949BAA951B($ECBB0CBC64AA951B)
_ECBA1C9C6BAA951B($ECB10C9CFBAA951B,$ECBB0C956BCA951B,$ECBB0C0C63AA951B)
BinaryLen($ECBB0C7C6AAA951B)= 0 
SetError( 1 , 0 ,Binary(""))
@AutoItX64 
StringInStr($ECB40C9CDBAA951B,"89C0")
StringInStr($ECB40C9CDBAA951B,"89D2")
StringInStr($ECB40C9CDBAA951B,"89F6")
Binary($ECB40C9CDBAA951B)
_ECBB0C950BAA951B( 0 ,BinaryLen($ECB40C9CDBAA951B),$ECB50C9C0BAA951B,$ECBB0C9C6BA0951B)
DllStructCreate("byte["&BinaryLen($ECB40C9CDBAA951B)&"]",$ECBB099C6BAC951B)
DllStructSetData($ECBB0A9C6B0A951B, 1 ,$ECB40C9CDBAA951B)
DllStructCreate("byte[16]")
StringLen($ECBB0C9C6EAD951B)
DllStructCreate("byte["&$ECBB0C9C61DA951B&"]")
DllCall("user32.dll","none","CallWindowProc","ptr",DllStructGetPtr($ECBB0A9C6B0A951B)+$ECBB0C9CB6AA951B,"ptr",DllStructGetPtr($ECBB2C8C6BAA951B),"int", 0 ,"int", 0 ,"int", 0 )
DllCall("user32.dll","int","CallWindowProc","ptr",DllStructGetPtr($ECBB0A9C6B0A951B)+$ECBB0C9C61AE951B,"str",$ECBB0C9C6EAD951B,"uint",$ECBB0C9C61DA951B,"ptr",DllStructGetPtr($ECBB075C6BAA951B),"ptr",DllStructGetPtr($ECBB2C8C6BAA951B))
DllStructGetData(DllStructCreate("uint",DllStructGetPtr($ECBB075C6BAA951B)), 1 )
DllStructCreate("byte["&($ECBB059C5BAA951B+ 16 )&"]")
DllCall("user32.dll","uint","CallWindowProc","ptr",DllStructGetPtr($ECBB0A9C6B0A951B)+$ECBB069C7BAA951B,"ptr",DllStructGetPtr($ECBB075C6BAA951B)+ 4 ,"ptr",DllStructGetPtr($ECB80C9C62AA951B),"int", 0 ,"int", 0 )
_ECBB0C9CB4AA951B($ECBB099C6BAC951B, 0 ,$ECBB8C6C6BAA951B)
BinaryMid(DllStructGetData($ECB80C9C62AA951B, 1 ), 1 ,$ECBB0C7C6AAA951B[ 0 ])
Number($ECB20C3C6BAA951B)
Number($ECB20C3C6BAA951B)
_ECBB0C7C4BAA951B()
BinaryToString(_ECBF049C6BAA951B($ECBB0C2CEBAA951B[$ECBB0C9C6BA2951B],$ECB15C9C6BAA951B))
_ECBF0C9D6BAA951B()
_ECBB089C6B6A951B(3)
_ECBB0CDC65AA951B("")
_ECBB059C4BAA951B($ECBB0C936BAE951B,$ECBB8C9C6BAF951B)
_ECBB0C9CEB0A951B($ECBB0C9C14AA951B, 0 ,$ECBB0C936BAE951B)
_ECBB0C9DEBAA951B($ECBB0C936BAE951B,$ECBB0C9C14AA951B, 0 )
_ECBB5C4C6BAA951B($ECBB0C9C14AA951B, 0 ,$ECBB0C9C14AA951B, 0 )
_ECBB0CAC6DAA951B($ECBB0C936BAE951B, 1 )
_ECBB0CFC6B7A951B($ECBB0C9C14AA951B, 0 , 1 )
$cmdline[0]>0 
$ECBB0C9CEBCA951B="" 
$ECBB0C9CEBCA951B<= 0 Or $ECBB0C9CEBCA951B>UBound($ECBB0C2CEBAA951B)- 1 
String($ECBB0C9CEBCA951B)
$ECBB0C2CEBAA951B[$ECBB0C9CEBCA951B]="" And $ECBB0C7C6B7A951B= True 
InputBox("Protected Application","Please Enter your Password: ","","*", 250 , 140 )
$ECB70C9C6BA1951B 
DllCall("user32.dll","bool","IsWindowVisible","hwnd",$ECBB0C9C5BAA951B)
Not $ECBB0C9C6B62951B[0] 
_ECB0079C6BAA951B($ECBB0C1C6B0A951B)
DllCall("user32.dll","int","GetClassNameW","hwnd",$ECBB0C9C5BAA951B,"wstr","","int", 4096 )
UBound($ECBB6F9C6BAA951B,$ECBB0CDA6BAA951B)
$ECBB0C9F61AA951B< 0 
UBound($ECBB6F9C6BAA951B,$ECBB0CDA6BAA951B)
$ECBB6F9C6BAA951B[ 0 ][ 0 ]>UBound($ECBB6F9C6BAA951B)- 1 
UBound($ECBB6F9C6BAA951B,$ECBB0CDA6BAA951B)
UBound($ECBB6F9C6BAA951B,$ECBB0C9BCBAA951B)
$ECBB0C9F61AA951B< 0 
$ECBB6F9C6BAA951B[ 0 ]>UBound($ECBB6F9C6BAA951B)- 1 
DllCall('comctl32.dll','lresult','DefSubclassProc','hwnd',$ECBB0C9C5BAA951B,'uint',$ECBB0C9C67AA951B,'wparam',$ECBB0C946BAF951B,'lparam',$ECBB4C9C67AA951B)
@error 
SetError(@error,@extended, 0 )
DllCall('comctl32.dll','bool','RemoveWindowSubclass','hwnd',$ECBB0C9C5BAA951B,'ptr',$ECBC0C9C6BA2951B,'uint_ptr',$ECBB0C9CE9AA951B)
@error 
SetError(@error,@extended, False )
DllStructCreate('hwnd;uint_ptr;'&_ECBE0CFC6BAA951B(@AutoItX64,'int;int','int')&';int Item;int;uint;uint;uint;long;long;lparam;uint',$ECBB4C9C67AA951B)
DllStructGetData($ECBB0C9C0BDA951B, 1 )
DllStructGetData($ECBB0C9C0BDA951B, 3 )
DllStructCreate('ptr;uint',$ECBB0C9CDB0A951B)
DllStructGetData($ECBB0C906B2A951B, 2 )
DllStructGetData($ECBB0C906B2A951B, 1 )
$ECBB00DC6BAA951B 
GUICtrlSendToDummy($ECBB00DC6BAA951B,DllStructGetData($ECBB0C9C0BDA951B,'Item'))
_ECBB0C9C8AAA951B($ECBB0D9C61AA951B,$ECBB0C9C67AA951B,$ECBB0C946BAF951B,$ECBB4C9C67AA951B)
DllStructCreate($ECBB0D9E6BAA951B,$ECB50C9C8BAA951B)
DllStructGetData($ECBB0C9B3BAA951B,'NameLen')
$ECB20C9C6BAA951B And BitAND(DllStructGetData($ECBB0C9B3BAA951B,'Flags'), 0x00000600 ) 
_ECB0079C6BAA951B($ECBB0C1C6B0A951B, 500 )
DllStructGetData($ECBB0C9B3BAA951B,'Address')
DllStructGetData(DllStructCreate('char['&($ECB20C9C6BAA951B+ 1 )&']',DllStructGetPtr($ECBB0C9B3BAA951B,'Name')), 1 )
DllStructCreate($ECBB0D9E6BAA951B,$ECB50C9C8BAA951B)
DllStructGetData($ECBB0C9B3BAA951B,'NameLen')
$ECB20C9C6BAA951B And BitAND(DllStructGetData($ECBB0C9B3BAA951B,'Flags'), 0x00000600 ) 
_ECB0079C6BAA951B($ECBB0C1C6B0A951B, 500 )
DllStructGetData($ECBB0C9B3BAA951B,'Address')
DllStructGetData(DllStructCreate('wchar['&($ECB20C9C6BAA951B+ 1 )&']',DllStructGetPtr($ECBB0C9B3BAA951B,'Name')), 1 )
DllCallbackGetPtr($ECBB0C9CDBA0951B)
$ECBB0E9C6EAA951B 
_ECBB0C927BAA951B($ECBB0CBC68AA951B,$ECBB0E9C6EAA951B, 1000 )
DllCallbackFree($ECBB0C9CDBA0951B)
StringLeft($ECBB0C9B6EAA951B, 9 )
_ECBB0C9C7B4A951B($ECBB0C9C2B4A951B&$ECBB0C9D6B1A951B)
_ECBB0C9CFBAB951B($ECBB0C976BAA951B)
_ECB10C9CDBAA951B($ECBB0C976BAA951B)
StringReplace(GUICtrlRead($ECBF0C4C6BAA951B),"-","")
Not _ECBB069C6BA5951B($ECBB0C9B6EAA951B,$ECBB6C9C6EAA951B) 
GUICtrlSetState($ECBB3C9C6B2A951B,$ECBB0CCC6BA3951B)
GUICtrlSetState($ECBB3C9C6B2A951B,$ECBBEC9C6B4A951B)
StringRegExpReplace($ECBB0C9B6EAA951B,"([A-Z0-9]{5})(?=[A-Z0-9])","\1-")
GUICtrlSetData($ECBF0C4C6BAA951B,$ECBB0C9B6EAA951B)
_ECBB2CAC6BAA951B()
StringTrimLeft(_ECBB7C8C6BAA951B($ECBB0C9CFBAC951B,$ECBB0C9CDBAA951B), 2 )
Mod(Dec(StringMid($ECBB0C9C6BBA951B,($ECBB0C9C6B4A951B* 2 )- 1 , 2 )), 32 )
StringMid($ECBB0C9C6B5E951B,$ECBBBC9C67AA951B+ 1 , 1 )
_ECBB0A9C6BA5951B()
Binary ("0x5D744568B606B05925AA26F8FD75392AFF9EE47A2B544C52027612F218CD9D1A")
Binary ("0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
Binary ("0x55AA5AA5")
Not @Compiled 
_ECBB05BC6BAA951B($ECBB0C9C6DAA951B&" v"&$ECBB0C9C8BAA951B)
OnAutoItExitRegister("_ECB30C0C6BAA951B")
DirRemove(@TempDir&"\"&$ECBB0C9C6DAA951B, 1 )
DirCreate(@TempDir&"\"&$ECBB0C9C6DAA951B)
GUICreate($ECBB0C5C6BAA951B, 400 , 340 ,- 1 ,- 1 )
GUICtrlCreateMenu("&File")
GUICtrlCreateMenuItem("E&xit",$ECBB0CFC6BAA951B)
GUICtrlCreateMenu("&Tools")
GUICtrlCreateMenu("Unpack",$ECBB0CBC6BAA951B)
GUICtrlCreateMenuItem("UPDATE.APP",$ECBB0C9C65AA951B)
GUICtrlCreateMenu("Repack",$ECBB0CBC6BAA951B)
GUICtrlCreateMenuItem("UPDATE.APP",$ECBB059C6BAA951B)
GUICtrlCreateMenuItem("",$ECBB0CBC6BAA951B)
GUICtrlCreateMenu("Miscellaneous",$ECBB0CBC6BAA951B)
GUICtrlCreateMenuItem("Remove Immutable",$ECBB0C916BAA951B)
GUICtrlCreateMenuItem("Remove Bloatware",$ECBB0C916BAA951B)
GUICtrlCreateMenuItem("Download Firmware",$ECBB0C916BAA951B)
GUICtrlCreateMenu("Network",$ECBB0CBC6BAA951B)
GUICtrlCreateMenuItem("Unlock",$ECBB0C9C9BAA951B)
GUICtrlCreateMenuItem("Relock",$ECBB0C9C9BAA951B)
GUICtrlCreateMenu("Bootloader",$ECBB0CBC6BAA951B)
GUICtrlCreateMenuItem("Request Key",$ECBB0C9F6BAA951B)
GUICtrlCreateMenuItem("",$ECBB0C9F6BAA951B)
GUICtrlCreateMenuItem("Unlock",$ECBB0C9F6BAA951B)
GUICtrlCreateMenuItem("Relock",$ECBB0C9F6BAA951B)
GUICtrlCreateMenu("Flash",$ECBB0CBC6BAA951B)
GUICtrlCreateMenuItem("UPDATE.APP",$ECBB069C6BAA951B)
GUICtrlCreateMenuItem("",$ECBB069C6BAA951B)
GUICtrlCreateMenuItem("Boot",$ECBB069C6BAA951B)
GUICtrlCreateMenuItem("Recovery",$ECBB069C6BAA951B)
GUICtrlCreateMenuItem("System",$ECBB069C6BAA951B)
GUICtrlCreateMenu("Reboot",$ECBB0CBC6BAA951B)
GUICtrlCreateMenuItem("Reboot",$ECBB0CAC6BAA951B)
GUICtrlCreateMenuItem("Recovery",$ECBB0CAC6BAA951B)
GUICtrlCreateMenuItem("Bootloader",$ECBB0CAC6BAA951B)
GUICtrlCreateMenu("&Help")
GUICtrlCreateMenuItem("&About "&$ECBB0C9C6DAA951B&"...",$ECBB0C906BAA951B)
GUICtrlCreatePic(@ScriptDir&"\res\banner.bmp", 0 , 0 , 400 , 160 )
GUICtrlCreateLabel("Product Model:", 10 , 180 , 76 , 17 )
GUICtrlCreateInput("", 10 , 195 , 380 , 21 )
GUICtrlCreateLabel("Product IMEI/MEID:", 10 , 220 , 101 , 17 )
GUICtrlCreateInput("", 10 , 235 , 380 , 21 )
GUICtrlCreateLabel("Product ID:", 10 , 260 , 58 , 17 )
GUICtrlCreateInput("", 10 , 275 , 380 , 21 ,BitOR($ECBB0C9C62AA951B,$ECBB0C9C61AA951B))
GUIRegisterMsg($ECBB0E9C6BAA951B,"_ECB00C9C62AA951B")
GUIRegisterMsg($ECBB0F9C6BAA951B,"_ECBB0A9C6BAD951B")
GUISetState()
_ECBB0C846BAA951B()
1       
GUIGetMsg()
FileOpenDialog("Open",@WorkingDir,"Huawei Firmware Files (*.app)|All Files (*.*)",$ECBB0C9C0BAA951B,"UPDATE.APP",$ECBB0C9A6BAA951B)
Not @error 
_ECBB0F9C6B8A951B("Unpacking...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
DirRemove(@WorkingDir&"\UPDATE", 1 )
DirCreate(@WorkingDir&"\UPDATE")
_ECBB0C926B7A951B($ECBB0CCC6BAA951B,@WorkingDir&"\UPDATE")
_ECBB0C9B6AAA951B()
FileOpenDialog("Open",@WorkingDir&"\UPDATE","Sequence Files (*.ini)|All Files (*.*)",$ECBB0C9C0BAA951B,"Sequence.ini",$ECBB0C9A6BAA951B)
Not @error 
_ECBB0F9C6B8A951B("Repacking...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
FileDelete(StringLeft(@WorkingDir,StringInStr(@WorkingDir,"\", Default ,- 1 )- 1 )&"\UPDATE.APP.NEW")
_ECBB0CBC6BA3951B($ECBB0CCC6BAA951B,StringLeft(@WorkingDir,StringInStr(@WorkingDir,"\", Default ,- 1 )- 1 )&"\UPDATE.APP.NEW")
_ECBB0C9B6AAA951B()
$ECBB0C9C6EAA951B<>"Online" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Found.", Default ,$ECBB0C9A6BAA951B)
Not $ECBB0C9B6BAA951B 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"Root Access Is Required.", Default ,$ECBB0C9A6BAA951B)
_ECBB0F9C6B8A951B("Removing Immutable...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBB5C986BAA951B("mkdir /data/local/tmp", True )
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9C6A5A951B("busybox","/data/local/tmp")
_ECBB5C986BAA951B("chmod 755 /data/local/tmp/busybox")
_ECBB0C9C6A5A951B("set_immutable","/data/local/tmp")
_ECBB5C986BAA951B("chmod 755 /data/local/tmp/set_immutable")
_ECBB0C9C6A5A951B(@ScriptDir&"\shells\remove_immutable.sh","/data/local/tmp")
_ECBB5C986BAA951B("chmod 755 /data/local/tmp/remove_immutable.sh")
_ECBB5C986BAA951B("sh /data/local/tmp/remove_immutable.sh", True )
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9C95AA951B("Rebooting...")
_ECBB9E9C6BAA951B()
_ECBB0C9B6AAA951B()
$ECBB0C9C6EAA951B<>"Online" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Found.", Default ,$ECBB0C9A6BAA951B)
Not FileExists(@ScriptDir&"\bloatware\"&$ECBB0C9CCBAA951B&".lst") 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Supported.", Default ,$ECBB0C9A6BAA951B)
Not $ECBB0C9B6BAA951B 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"Root Access Is Required.", Default ,$ECBB0C9A6BAA951B)
_ECBB0F9C6B8A951B("Removing Bloatware...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBB5C986BAA951B("mkdir /data/local/tmp", True )
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9C6A5A951B("busybox","/data/local/tmp")
_ECBB5C986BAA951B("chmod 755 /data/local/tmp/busybox")
_ECBB0C9C6A5A951B(@ScriptDir&"\bloatware\"&$ECBB0C9CCBAA951B&".lst","/data/local/tmp/bloatware.lst")
_ECBB0C9C6A5A951B(@ScriptDir&"\shells\remove_bloatware.sh","/data/local/tmp")
_ECBB5C986BAA951B("chmod 755 /data/local/tmp/remove_bloatware.sh")
_ECBB5C986BAA951B("sh /data/local/tmp/remove_bloatware.sh", True )
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9C95AA951B("Rebooting...")
_ECBB9E9C6BAA951B()
_ECBB0C9B6AAA951B()
ShellExecute("http://consumer.huawei.com/cn/support/downloads/index.htm?keyword="&_ECBB0CD16BAA951B("ro.product.name"))
$ECBB0C9C6EAA951B<>"Online" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Found.", Default ,$ECBB0C9A6BAA951B)
Not $ECBB0C9B6BAA951B 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"Root Access Is Required.", Default ,$ECBB0C9A6BAA951B)
_ECBB0F9C6B8A951B("Checking...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBB5C986BAA951B("mkdir /data/local/tmp", True )
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB5C986BAA951B("cat /dev/block/"&$ECBB0C8C6BAA951B&" > /data/local/tmp/oeminfo.mbn", True )
_ECBB5C986BAA951B("chmod 666 /data/local/tmp/oeminfo.mbn", True )
_ECBB0C9C6D3A951B("/data/local/tmp/oeminfo.mbn",@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn")
_ECBB0C9A7BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn", 8 )<>Binary("0x4F454D5F494E464F") 
_ECBB5C986BAA951B("cat /dev/block/"&$ECBB0C8C6BAA951B&" > /data/local/tmp/oeminfo.mbn", True )
_ECBB5C986BAA951B("chmod 666 /data/local/tmp/oeminfo.mbn", True )
_ECBB0C9C6D3A951B("/data/local/tmp/oeminfo.mbn",@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn")
_ECB10C9C6BAB951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn",Binary("0x010010"))
$ECBB0C946BAA951B=-1 
FileDelete(@TempDir&"\"&$ECBB0C9C6DAA951B&"\*.mbn")
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9B6AAA951B()
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Supported.", Default ,$ECBB0C9A6BAA951B)
_ECBB0C9A7BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn", 16 ,$ECBB0C946BAA951B+ 3 )
_ECBB0C9A7BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn", 16 ,$ECBB0C946BAA951B+ 3 + 16 + 3 )
_ECBB0C9A7BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn", 16 ,$ECBB0C946BAA951B+ 3 + 16 + 3 + 16 + 3 )
$ECBB049C6BAA951B<>$ECBB0C9CEBAA951B 
FileDelete(@TempDir&"\"&$ECBB0C9C6DAA951B&"\*.mbn")
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9B6AAA951B()
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Supported.", Default ,$ECBB0C9A6BAA951B)
$ECBB0C9CBBAA951B=$ECBB049C6BAA951B 
FileDelete(@TempDir&"\"&$ECBB0C9C6DAA951B&"\*.mbn")
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9B6AAA951B()
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"Network Is Already Unlocked.", Default ,$ECBB0C9A6BAA951B)
_ECBB0C9C95AA951B("Unlocking...")
_ECBA0C9A6BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn",$ECBB049C6BAA951B,$ECBB0C946BAA951B+ 3 )
_ECBB0C9C6A5A951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn","/data/local/tmp")
_ECBB5C986BAA951B("cat /data/local/tmp/oeminfo.mbn > /dev/block/"&$ECBB0C8C6BAA951B, True )
FileDelete(@TempDir&"\"&$ECBB0C9C6DAA951B&"\*.mbn")
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9C95AA951B("Rebooting...")
_ECBB9E9C6BAA951B()
_ECBB0C9B6AAA951B()
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Supported.", Default ,$ECBB0C9A6BAA951B)
$ECBB0C9C6EAA951B<>"Online" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Found.", Default ,$ECBB0C9A6BAA951B)
Not $ECBB0C9B6BAA951B 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"Root Access Is Required.", Default ,$ECBB0C9A6BAA951B)
_ECBB0F9C6B8A951B("Checking...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBB5C986BAA951B("mkdir /data/local/tmp", True )
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB5C986BAA951B("cat /dev/block/"&$ECBB0C8C6BAA951B&" > /data/local/tmp/oeminfo.mbn", True )
_ECBB5C986BAA951B("chmod 666 /data/local/tmp/oeminfo.mbn", True )
_ECBB0C9C6D3A951B("/data/local/tmp/oeminfo.mbn",@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn")
_ECBB0C9A7BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn", 8 )<>Binary("0x4F454D5F494E464F") 
_ECBB5C986BAA951B("cat /dev/block/"&$ECBB0C8C6BAA951B&" > /data/local/tmp/oeminfo.mbn", True )
_ECBB5C986BAA951B("chmod 666 /data/local/tmp/oeminfo.mbn", True )
_ECBB0C9C6D3A951B("/data/local/tmp/oeminfo.mbn",@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn")
_ECB10C9C6BAB951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn",Binary("0x010010"))
$ECBB0C946BAA951B=-1 
FileDelete(@TempDir&"\"&$ECBB0C9C6DAA951B&"\*.mbn")
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9B6AAA951B()
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Supported.", Default ,$ECBB0C9A6BAA951B)
_ECBB0C9A7BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn", 16 ,$ECBB0C946BAA951B+ 3 )
_ECBB0C9A7BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn", 16 ,$ECBB0C946BAA951B+ 3 + 16 + 3 )
_ECBB0C9A7BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn", 16 ,$ECBB0C946BAA951B+ 3 + 16 + 3 + 16 + 3 )
$ECBB049C6BAA951B<>$ECBB0C9CEBAA951B 
FileDelete(@TempDir&"\"&$ECBB0C9C6DAA951B&"\*.mbn")
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9B6AAA951B()
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Supported.", Default ,$ECBB0C9A6BAA951B)
$ECBB0C9CBBAA951B=Binary("0x00000000000000000000000000000000") 
FileDelete(@TempDir&"\"&$ECBB0C9C6DAA951B&"\*.mbn")
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9B6AAA951B()
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"Network Is Already Relocked.", Default ,$ECBB0C9A6BAA951B)
_ECBB0C9C95AA951B("Relocking...")
_ECBA0C9A6BAA951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn",Binary("0x00000000000000000000000000000000"),$ECBB0C946BAA951B+ 3 )
_ECBB0C9C6A5A951B(@TempDir&"\"&$ECBB0C9C6DAA951B&"\oeminfo.mbn","/data/local/tmp")
_ECBB5C986BAA951B("cat /data/local/tmp/oeminfo.mbn > /dev/block/"&$ECBB0C8C6BAA951B, True )
FileDelete(@TempDir&"\"&$ECBB0C9C6DAA951B&"\*.mbn")
_ECBB5C986BAA951B("rm -r /data/local/tmp/*", True )
_ECBB0C9C95AA951B("Rebooting...")
_ECBB9E9C6BAA951B()
_ECBB0C9B6AAA951B()
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Supported.", Default ,$ECBB0C9A6BAA951B)
ShellExecute("http://www.emui.com/plugin.php?id=unlock&mod=detail")
$ECBB0C9C6EAA951B<>"Online" And $ECBB0C9C6EAA951B<>"Bootloader" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Found.", Default ,$ECBB0C9A6BAA951B)
$ECBB0C9C6EAA951B<>"Bootloader" 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"This Function Only Works In Bootloader Mode.", Default ,$ECBB0C9A6BAA951B)
1       
InputBox($ECBB0C5C6BAA951B,"Key:", Default , Default , 305 , 130 , Default , Default , Default ,$ECBB0C9A6BAA951B)
@error= 1 Or $ECBB0C9C1BAA951B<>"" 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"Key Should Not Be Empty.", Default ,$ECBB0C9A6BAA951B)
Not @error 
_ECBB0F9C6B8A951B("Unlocking...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBB0C9C65A8951B("fastboot oem unlock "&$ECBB0C9C1BAA951B)
_ECBB0C9B6AAA951B()
$ECBB0C9C6EAA951B<>"Online" And $ECBB0C9C6EAA951B<>"Bootloader" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Found.", Default ,$ECBB0C9A6BAA951B)
$ECBB0C9C6EAA951B<>"Bootloader" 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"This Function Only Works In Bootloader Mode.", Default ,$ECBB0C9A6BAA951B)
1       
InputBox($ECBB0C5C6BAA951B,"Key:", Default , Default , 305 , 130 , Default , Default , Default ,$ECBB0C9A6BAA951B)
@error= 1 Or $ECBB0C9C1BAA951B<>"" 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"Key Should Not Be Empty.", Default ,$ECBB0C9A6BAA951B)
Not @error 
_ECBB0F9C6B8A951B("Relocking...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBB0C9C65A8951B("fastboot oem relock "&$ECBB0C9C1BAA951B)
_ECBB0C9B6AAA951B()
$ECBB0C9C6EAA951B<>"Online" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Found.", Default ,$ECBB0C9A6BAA951B)
$ECBB0C9CCBAA951B<>"Huawei" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Supported.", Default ,$ECBB0C9A6BAA951B)
_ECBB5C986BAA951B("echo > /storage/sdcard1/sd_card_checker")
Not _ECBB0C986FAA951B("/storage/sdcard1/sd_card_checker") 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"SD Card Is Required.", Default ,$ECBB0C9A6BAA951B)
_ECBB5C986BAA951B("rm /storage/sdcard1/sd_card_checker")
FileOpenDialog("Open",@WorkingDir,"Huawei Firmware Files (*.app)|All Files (*.*)",$ECBB0C9C0BAA951B,"UPDATE.APP",$ECBB0C9A6BAA951B)
Not @error 
_ECBB0F9C6B8A951B("Pushing...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBB5C986BAA951B("mkdir /storage/sdcard1/dload")
_ECBB5C986BAA951B("rm -r /storage/sdcard1/dload/*")
_ECBB0C9C6A5A951B($ECBB0CCC6BAA951B,"/storage/sdcard1/dload/UPDATE.APP")
_ECBB5C986BAA951B("echo > /storage/sdcard1/dload/au_temp.cfg")
_ECBB0C9C95AA951B("Rebooting...")
_ECBB9E9C6BAA951B()
_ECBB0C9B6AAA951B()
_ECBBDC1C6BAA951B("boot")
_ECBBDC1C6BAA951B("recovery")
_ECBBDC1C6BAA951B("system")
_ECBB02996BAA951B()
_ECBB02996BAA951B("recovery")
_ECBB02996BAA951B("bootloader")
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),"About",$ECBB0C9C6DAA951B&@CRLF&@CRLF&"Version: "&$ECBB0C9C8BAA951B&@CRLF&"Developed By: "&$ECBB0B9C6BAA951B, Default ,$ECBB0C9A6BAA951B)
_ECBB0C846BAA951B()
_ECBB0C9CFBAB951B($ECBB0C976BAA951B)
_ECB10C9CDBAA951B($ECBB0C976BAA951B)
GUICtrlSetData($ECBB009C6BAA951B,_ECBB0C9C3BA7951B(GUICtrlRead($ECBB0C1C6BAA951B),GUICtrlRead($ECBB039C6BAA951B)))
_ECBB0C4CDBAA951B()
$ECBB0C9C6EAA951B<>$ECBB0C9E6BAA951B 
_ECBB0CD16BAA951B("ro.product.manufacturer")
_ECBB0CD16BAA951B("ro.product.model")
_ECBBBC9C65AA951B()
_ECBB0C9C8B7A951B()
_ECBF0C1C6BAA951B()
$ECBB0A9C6BAA951B="" 
_ECBF0C1C6BAA951B()
GUICtrlSetData($ECBB0C1C6BAA951B,$ECBBEC9C6BAA951B)
GUICtrlSetData($ECBB039C6BAA951B,$ECBB2C9C6BAA951B)
_ECBB0F9C6B8A951B("Connecting...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBB9C9C67AA951B()
_ECBB0C9B6AAA951B()
_ECBB2CAC6BAA951B()
StringTrimLeft(_ECBB7C8C6BAA951B($ECBBEC9C6BAA951B&$ECBB2C9C6BAA951B,$ECBB0C9CDBAA951B), 2 )
StringSplit(_ECBB2CCC6BAA951B(BitXOR(Dec(StringLeft($ECBB0C9C6BBA951B, 8 )),Dec(StringRight($ECBB0C9C6BBA951B, 8 )))),"")
StringInStr("ABCDEF",$ECBBFC9C6BAA951B[$ECBB0C9C6B4A951B]) 
Chr(Asc($ECBBFC9C6BAA951B[$ECBB0C9C6B4A951B])- 17 )
_ECBB0A9C6BA5951B()
_ECBB0E986BAA951B($ECBB0C956BAA951B,"")
$ECBB0C9C6EAA951B<>"Online" And $ECBB0C9C6EAA951B<>"Bootloader" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Found.", Default ,$ECBB0C9A6BAA951B)
$ECBB0C9C6EAA951B<>"Bootloader" 
MsgBox(BitOR($ECBB0C996BAA951B,$ECBB0D9C6BAA951B),$ECBB0C5C6BAA951B,"This Function Only Works In Bootloader Mode.", Default ,$ECBB0C9A6BAA951B)
FileOpenDialog("Open",@WorkingDir,$ECBB1C9C6BAA951B&"|All Files (*.*)",$ECBB0C9C0BAA951B,"",$ECBB0C9A6BAA951B)
Not @error 
_ECBB0F9C6B8A951B("Flashing...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBBFCBC6BAA951B($ECBB0C9C6B7A951B,$ECBB0CCC6BAA951B)
_ECBB0C9B6AAA951B()
($ECBB0C9C6EAA951B<>"Online" And $ECBB0C9C6EAA951B<>"Bootloader") Or (($ECBB0C9C6B7A951B="recovery" Or $ECBB0C9C6B7A951B="download") And $ECBB0C9C6EAA951B<>"Online") 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Found.", Default ,$ECBB0C9A6BAA951B)
$ECBB0C9C6B7A951B="download" And $ECBB0C9CCBAA951B<>"Samsung" 
MsgBox(BitOR($ECBB0C9C2BAA951B,$ECBB0D9C6BAA951B),"Error","Device Is Not Supported.", Default ,$ECBB0C9A6BAA951B)
_ECBB0F9C6B8A951B("Rebooting...",$ECBB079C6BAA951B, 200 ,$ECBB0C9A6BAA951B)
_ECBB9E9C6BAA951B($ECBB0C9C6B7A951B)
_ECBB0C9B6AAA951B()
DirRemove(@TempDir&"\"&$ECBB0C9C6DAA951B, 1 )
Hex($ECBB0C9C6BDA951B)
StringLeft($ECBB0C9C66AA951B, 1 )="0"       
StringMid($ECBB0C9C66AA951B, 2 )
StringLeft($ECBB0C9C66AA951B, 1 )<>"0" 
